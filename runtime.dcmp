export memory memory(initial: 256, max: 32768);

global g_a:int = 81584;
global g_b:int = 0;
global g_c:int = 0;
global g_d:int = 0;

export table indirect_function_table:funcref(min: 8, max: 8);

data d_4567890123stopnowerrorparam(offset: 1024) =
  "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\fd\ff\ff\fd\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff"
  "\ff\ff\ff\ff\ff\ff\ff\ff\fd\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff>\ff\ff\ff?45"
  "6789:;<=\ff\ff\ff\fe\ff\ff\ff\00\01\02\03\04\05\06\07\08\09\0a\0b\0c\0d"
  "\0e\0f\10\11\12\13\14\15\16\17\18\19\ff\ff\ff\ff\ff\ff\1a\1b\1c\1d\1e\1f"
  " !"#$%&'()*+,-./0123\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff"
  "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff"
  "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff"
  "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff"
  "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff"
  "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ffstop now\00"
  "error param";
data d_ccwwkkooT0P0ggVbMvvEYYGGAg_E(offset: 1312) =
  "c\c6\a5c|\f8\84|w\ee\99w{\f6\8d{\f2\ff\0d\f2k\d6\bdko\de\b1o\c5\91T\c5"
  "0`P0\01\02\03\01g\ce\a9g+V}+\fe\e7\19\fe\d7\b5b\d7\abM\e6\abv\ec\9av\ca"
  "\8fE\ca\82\1f\9d\82\c9\89@\c9}\fa\87}\fa\ef\15\faY\b2\ebYG\8e\c9G\f0\fb"
  "\0b\f0\adA\ec\ad\d4\b3g\d4\a2_\fd\a2\afE\ea\af\9c#\bf\9c\a4S\f7\a4r\e4"
  "\96r\c0\9b[\c0\b7u\c2\b7\fd\e1\1c\fd\93=\ae\93&Lj&6lZ6?~A?\f7\f5\02\f7"
  "\cc\83O\cc4h\4\a5Q\f4\a5\e5\d14\e5\f1\f9\08\f1q\e2\93q\d8\abs\d81bS1\15"
  "*?\15\04\08\0c\04\c7\95R\c7#Fe#\c3\9d^\c3\180(\18\967\a1\96\05\0a\0f\05"
  "\9a/\b5\9a\07\0e\09\07\12$6\12\80\1b\9b\80\e2\df=\e2\eb\cd&\eb'Ni'\b2\7f"
  "\cd\b2u\ea\9fu\09\12\1b\09\83\1d\9e\83,Xt,\1a4.\1a\1b6-\1bn\dc\b2nZ\b4"
  "\eeZ\a0[\fb\a0R\a4\f6R;vM;\d6\b7a\d6\b3}\ce\b3)R{)\e3\dd>\e3/^q/\84\13"
  "\97\84S\a6\f5S\d1\b9h\d1\00\00\00\00\ed\c1,\ed @` \fc\e3\1f\fc\b1y\c8\b1"
  "[\b6\ed[j\d4\bej\cb\8dF\cb\beg\d9\be9rK9J\94\deJL\98\d4LX\b0\e8X\cf\85"
  "J\cf\d0\bbk\d0\ef\c5*\ef\aaO\e5\aa\fb\ed\16\fbC\86\c5CM\9a\d7M3fU3\85\11"
  "\94\85E\8a\cfE\f9\e9\10\f9\02\04\06\02\7f\fe\81\7fP\a0\f0P<xD<\9f%\ba\9f"
  "\a8K\e3\a8Q\a2\f3Q\a3]\fe\a3@\80\c0@\8f\05\8a\8f\92?\ad\92\9d!\bc\9d8p"
  "H8\f5\f1\04\f5\bcc\df\bc\b6w\c1\b6\da\afu\da!Bc!\10 0\10\ff\e5\1a\ff\f3"
  "\fd\0e\f3\d2\bfm\d2\cd\81L\cd\0c\18\14\0c\13&5\13\ec\c3/\ec_\be\e1_\97"
  "5\a2\97D\88\ccD\17.9\17\c4\93W\c4\a7U\f2\a7~\fc\82~=zG=d\c8\acd]\ba\e7"
  "]\192+\19s\e6\95s`\c0\a0`\81\19\98\81O\9e\d1O\dc\a3\7f\dc"Df"*T~*\90;\ab"
  "\90\88\0b\83\88F\8c\caF\ee\c7)\ee\b8k\d3\b8\14(<\14\de\a7y\de^\bc\e2^\0b"
  "\16\1d\0b\db\adv\db\e0\db;\e02dV2:tN:\0a\14\1e\0aI\92\dbI\06\0c\0a\06$"
  "Hl$\\b8\e4\\c2\9f]\c2\d3\bdn\d3\acC\ef\acb\c4\a6b\919\a8\91\951\a4\95\e4"
  "\d37\e4y\f2\8by\e7\d52\e7\c8\8bC\c87nY7m\da\b7m\8d\01\8c\8d\d5\b1d\d5N"
  "\9c\d2N\a9I\e0\a9l\d8\b4lV\ac\faV\f4\f3\07\f4\ea\cf%\eae\ca\afez\f4\8e"
  "z\aeG\e9\ae\08\10\18\08\bao\d5\bax\f0\88x%Jo%.\r.\1c8$\1c\a6W\f1\a6\b4"
  "s\c7\b4\c6\97Q\c6\e8\cb#\e8\dd\a1|\ddt\e8\9ct\1f>!\1fK\96\ddK\bda\dc\bd"
  "\8b\0d\86\8b\8a\0f\85\8ap\e0\90p>|B>\b5q\c4\b5f\cc\aafH\90\d8H\03\06\05"
  "\03\f6\f7\01\f6\0e\1c\12\0ea\c2\a3a5j_5W\ae\f9W\b9i\d0\b9\86\17\91\86\c1"
  "\99X\c1\1d:'\1d\9e'\b9\9e\e1\d98\e1\f8\eb\13\f8\98+\b3\98\11"3\11i\d2\bb"
  "i\d9\a9p\d9\8e\07\89\8e\943\a7\94\9b-\b6\9b\1e<"\1e\87\15\92\87\e9\c9 "
  "\e9\ce\87I\ceU\aa\ffU(Px(\df\a5z\df\8c\03\8f\8c\a1Y\f8\a1\89\09\80\89\0d"
  "\1a\17\0d\bfe\da\bf\e6\d71\e6B\84\c6Bh\d0\b8hA\82\c3A\99)\b0\99-Zw-\0f"
  "\1e\11\0f\b0{\cb\b0T\a8\fcT\bbm\d6\bb\16,:\16\c6\a5cc\f8\84||\ee\99ww\f6"
  "\8d{{\ff\0d\f2\f2\d6\bdkk\de\b1oo\91T\c5\c5`P00\02\03\01\01\ce\a9ggV}+"
  "+\e7\19\fe\fe\b5b\d7\d7M\e6\ab\ab\ec\9avv\8fE\ca\ca\1f\9d\82\82\89@\c9"
  "\c9\fa\87}}\ef\15\fa\fa\b2\ebYY\8e\c9GG\fb\0b\f0\f0A\ec\ad\ad\b3g\d4\d4"
  "_\fd\a2\a2E\ea\af\af#\bf\9c\9cS\f7\a4\a4\e4\96rr\9b[\c0\c0u\c2\b7\b7\e1"
  "\1c\fd\fd=\ae\93\93Lj&&lZ66~A??\f5\02\f7\f7\83O\cc\cch\44Q\f4\a5\a5\d1"
  "4\e5\e5\f9\08\f1\f1\e2\93qq\abs\d8\d8bS11*?\15\15\08\0c\04\04\95R\c7\c7"
  "Fe##\9d^\c3\c30(\18\187\a1\96\96\0a\0f\05\05/\b5\9a\9a\0e\09\07\07$6\12"
  "\12\1b\9b\80\80\df=\e2\e2\cd&\eb\ebNi''\7f\cd\b2\b2\ea\9fuu\12\1b\09\09"
  "\1d\9e\83\83Xt,,4.\1a\1a6-\1b\1b\dc\b2nn\b4\eeZZ[\fb\a0\a0\a4\f6RRvM;;"
  "\b7a\d6\d6}\ce\b3\b3R{))\dd>\e3\e3^q//\13\97\84\84\a6\f5SS\b9h\d1\d1\00"
  "\00\00\00\c1,\ed\ed@`  \e3\1f\fc\fcy\c8\b1\b1\b6\ed[[\d4\bejj\8dF\cb\cb"
  "g\d9\be\berK99\94\deJJ\98\d4LL\b0\e8XX\85J\cf\cf\bbk\d0\d0\c5*\ef\efO\e5"
  "\aa\aa\ed\16\fb\fb\86\c5CC\9a\d7MMfU33\11\94\85\85\8a\cfEE\e9\10\f9\f9"
  "\04\06\02\02\fe\81\7f\7f\a0\f0PPxD<<%\ba\9f\9fK\e3\a8\a8\a2\f3QQ]\fe\a3"
  "\a3\80\c0@@\05\8a\8f\8f?\ad\92\92!\bc\9d\9dpH88\f1\04\f5\f5c\df\bc\bcw"
  "\c1\b6\b6\afu\da\daBc!! 0\10\10\e5\1a\ff\ff\fd\0e\f3\f3\bfm\d2\d2\81L\cd"
  "\cd\18\14\0c\0c&5\13\13\c3/\ec\ec\be\e1__5\a2\97\97\88\ccDD.9\17\17\93"
  "W\c4\c4U\f2\a7\a7\fc\82~~zG==\c8\acdd\ba\e7]]2+\19\19\e6\95ss\c0\a0``\19"
  "\98\81\81\9e\d1OO\a3\7f\dc\dcDf""T~**;\ab\90\90\0b\83\88\88\8c\caFF\c7"
  ")\ee\eek\d3\b8\b8(<\14\14\a7y\de\de\bc\e2^^\16\1d\0b\0b\adv\db\db\db;\e0"
  "\e0dV22tN::\14\1e\0a\0a\92\dbII\0c\0a\06\06Hl$$\b8\e4\\\9f]\c2\c2\bdn\d3"
  "\d3C\ef\ac\ac\c4\a6bb9\a8\91\911\a4\95\95\d37\e4\e4\f2\8byy\d52\e7\e7\8b"
  "C\c8\c8nY77\da\b7mm\01\8c\8d\8d\b1d\d5\d5\9c\d2NNI\e0\a9\a9\d8\b4ll\ac"
  "\faVV\f3\07\f4\f4\cf%\ea\ea\ca\afee\f4\8ezzG\e9\ae\ae\10\18\08\08o\d5\ba"
  "\ba\f0\88xxJo%%\r..8$\1c\1cW\f1\a6\a6s\c7\b4\b4\97Q\c6\c6\cb#\e8\e8\a1"
  "|\dd\dd\e8\9ctt>!\1f\1f\96\ddKKa\dc\bd\bd\0d\86\8b\8b\0f\85\8a\8a\e0\90"
  "pp|B>>q\c4\b5\b5\cc\aaff\90\d8HH\06\05\03\03\f7\01\f6\f6\1c\12\0e\0e\c2"
  "\a3aaj_55\ae\f9WWi\d0\b9\b9\17\91\86\86\99X\c1\c1:'\1d\1d'\b9\9e\9e\d9"
  "8\e1\e1\eb\13\f8\f8+\b3\98\98"3\11\11\d2\bbii\a9p\d9\d9\07\89\8e\8e3\a7"
  "\94\94-\b6\9b\9b<"\1e\1e\15\92\87\87\c9 \e9\e9\87I\ce\ce\aa\ffUUPx((\a5"
  "z\df\df\03\8f\8c\8cY\f8\a1\a1\09\80\89\89\1a\17\0d\0de\da\bf\bf\d71\e6"
  "\e6\84\c6BB\d0\b8hh\82\c3AA)\b0\99\99Zw--\1e\11\0f\0f{\cb\b0\b0\a8\fcT"
  "Tm\d6\bb\bb,:\16\16\a5cc\c6\84||\f8\99ww\ee\8d{{\f6\0d\f2\f2\ff\bdkk\d6"
  "\b1oo\deT\c5\c5\91P00`\03\01\01\02\a9gg\ce}++V\19\fe\fe\e7b\d7\d7\b5\e6"
  "\ab\abM\9avv\ecE\ca\ca\8f\9d\82\82\1f@\c9\c9\89\87}}\fa\15\fa\fa\ef\eb"
  "YY\b2\c9GG\8e\0b\f0\f0\fb\ec\ad\adAg\d4\d4\b3\fd\a2\a2_\ea\af\afE\bf\9c"
  "\9c#\f7\a4\a4S\96rr\e4[\c0\c0\9b\c2\b7\b7u\1c\fd\fd\e1\ae\93\93=j&&LZ6"
  "6lA??~\02\f7\f7\f5O\cc\cc\83\44h\f4\a5\a5Q4\e5\e5\d1\08\f1\f1\f9\93qq\e2"
  "s\d8\d8\abS11b?\15\15*\0c\04\04\08R\c7\c7\95e##F^\c3\c3\9d(\18\180\a1\96"
  "\967\0f\05\05\0a\b5\9a\9a/\09\07\07\0e6\12\12$\9b\80\80\1b=\e2\e2\df&\eb"
  "\eb\cdi''N\cd\b2\b2\7f\9fuu\ea\1b\09\09\12\9e\83\83\1dt,,X.\1a\1a4-\1b"
  "\1b6\b2nn\dc\eeZZ\b4\fb\a0\a0[\f6RR\a4M;;va\d6\d6\b7\ce\b3\b3}{))R>\e3"
  "\e3\ddq//^\97\84\84\13\f5SS\a6h\d1\d1\b9\00\00\00\00,\ed\ed\c1`  @\1f\fc"
  "\fc\e3\c8\b1\b1y\ed[[\b6\bejj\d4F\cb\cb\8d\d9\be\begK99r\deJJ\94\d4LL\98"
  "\e8XX\b0J\cf\cf\85k\d0\d0\bb*\ef\ef\c5\e5\aa\aaO\16\fb\fb\ed\c5CC\86\d7"
  "MM\9aU33f\94\85\85\11\cfEE\8a\10\f9\f9\e9\06\02\02\04\81\7f\7f\fe\f0PP"
  "\a0D<<x\ba\9f\9f%\e3\a8\a8K\f3QQ\a2\fe\a3\a3]\c0@@\80\8a\8f\8f\05\ad\92"
  "\92?\bc\9d\9d!H88p\04\f5\f5\f1\df\bc\bcc\c1\b6\b6wu\da\da\afc!!B0\10\10"
  " \1a\ff\ff\e5\0e\f3\f3\fdm\d2\d2\bfL\cd\cd\81\14\0c\0c\185\13\13&/\ec\ec"
  "\c3\e1__\be\a2\97\975\ccDD\889\17\17.W\c4\c4\93\f2\a7\a7U\82~~\fcG==z\ac"
  "dd\c8\e7]]\ba+\19\192\95ss\e6\a0``\c0\98\81\81\19\d1OO\9e\7f\dc\dc\a3f"
  """D~**T\ab\90\90;\83\88\88\0b\caFF\8c)\ee\ee\c7\d3\b8\b8k<\14\14(y\de\de"
  "\a7\e2^^\bc\1d\0b\0b\16v\db\db\ad;\e0\e0\dbV22dN::t\1e\0a\0a\14\dbII\92"
  "\0a\06\06\0cl$$H\e4\\\b8]\c2\c2\9fn\d3\d3\bd\ef\ac\acC\a6bb\c4\a8\91\91"
  "9\a4\95\9517\e4\e4\d3\8byy\f22\e7\e7\d5C\c8\c8\8bY77n\b7mm\da\8c\8d\8d"
  "\01d\d5\d5\b1\d2NN\9c\e0\a9\a9I\b4ll\d8\faVV\ac\07\f4\f4\f3%\ea\ea\cf\af"
  "ee\ca\8ezz\f4\e9\ae\aeG\18\08\08\10\d5\ba\bao\88xx\f0o%%Jr..\$\1c\1c8\f1"
  "\a6\a6W\c7\b4\b4sQ\c6\c6\97#\e8\e8\cb|\dd\dd\a1\9ctt\e8!\1f\1f>\ddKK\96"
  "\dc\bd\bda\86\8b\8b\0d\85\8a\8a\0f\90pp\e0B>>|\c4\b5\b5q\aaff\cc\d8HH\90"
  "\05\03\03\06\01\f6\f6\f7\12\0e\0e\1c\a3aa\c2_55j\f9WW\ae\d0\b9\b9i\91\86"
  "\86\17X\c1\c1\99'\1d\1d:\b9\9e\9e'8\e1\e1\d9\13\f8\f8\eb\b3\98\98+3\11"
  "\11"\bbii\d2p\d9\d9\a9\89\8e\8e\07\a7\94\943\b6\9b\9b-"\1e\1e<\92\87\87"
  "\15 \e9\e9\c9I\ce\ce\87\ffUU\aax((Pz\df\df\a5\8f\8c\8c\03\f8\a1\a1Y\80"
  "\89\89\09\17\0d\0d\1a\da\bf\bfe1\e6\e6\d7\c6BB\84\b8hh\d0\c3AA\82\b0\99"
  "\99)w--Z\11\0f\0f\1e\cb\b0\b0{\fcTT\a8\d6\bb\bbm:\16\16,cc\c6\a5||\f8\84"
  "ww\ee\99{{\f6\8d\f2\f2\ff\0dkk\d6\bdoo\de\b1\c5\c5\91T00`P\01\01\02\03"
  "gg\ce\a9++V}\fe\fe\e7\19\d7\d7\b5b\ab\abM\e6vv\ec\9a\ca\ca\8fE\82\82\1f"
  "\9d\c9\c9\89@}}\fa\87\fa\fa\ef\15YY\b2\ebGG\8e\c9\f0\f0\fb\0b\ad\adA\ec"
  "\d4\d4\b3g\a2\a2_\fd\af\afE\ea\9c\9c#\bf\a4\a4S\f7rr\e4\96\c0\c0\9b[\b7"
  "\b7u\c2\fd\fd\e1\1c\93\93=\ae&&Lj66lZ??~A\f7\f7\f5\02\cc\cc\83O44h\\a5"
  "\a5Q\f4\e5\e5\d14\f1\f1\f9\08qq\e2\93\d8\d8\abs11bS\15\15*?\04\04\08\0c"
  "\c7\c7\95R##Fe\c3\c3\9d^\18\180(\96\967\a1\05\05\0a\0f\9a\9a/\b5\07\07"
  "\0e\09\12\12$6\80\80\1b\9b\e2\e2\df=\eb\eb\cd&''Ni\b2\b2\7f\cduu\ea\9f"
  "\09\09\12\1b\83\83\1d\9e,,Xt\1a\1a4.\1b\1b6-nn\dc\b2ZZ\b4\ee\a0\a0[\fb"
  "RR\a4\f6;;vM\d6\d6\b7a\b3\b3}\ce))R{\e3\e3\dd>//^q\84\84\13\97SS\a6\f5"
  "\d1\d1\b9h\00\00\00\00\ed\ed\c1,  @`\fc\fc\e3\1f\b1\b1y\c8[[\b6\edjj\d4"
  "\be\cb\cb\8dF\be\beg\d999rKJJ\94\deLL\98\d4XX\b0\e8\cf\cf\85J\d0\d0\bb"
  "k\ef\ef\c5*\aa\aaO\e5\fb\fb\ed\16CC\86\c5MM\9a\d733fU\85\85\11\94EE\8a"
  "\cf\f9\f9\e9\10\02\02\04\06\7f\7f\fe\81PP\a0\f0<<xD\9f\9f%\ba\a8\a8K\e3"
  "QQ\a2\f3\a3\a3]\fe@@\80\c0\8f\8f\05\8a\92\92?\ad\9d\9d!\bc88pH\f5\f5\f1"
  "\04\bc\bcc\df\b6\b6w\c1\da\da\afu!!Bc\10\10 0\ff\ff\e5\1a\f3\f3\fd\0e\d2"
  "\d2\bfm\cd\cd\81L\0c\0c\18\14\13\13&5\ec\ec\c3/__\be\e1\97\975\a2DD\88"
  "\cc\17\17.9\c4\c4\93W\a7\a7U\f2~~\fc\82==zGdd\c8\ac]]\ba\e7\19\192+ss\e6"
  "\95``\c0\a0\81\81\19\98OO\9e\d1\dc\dc\a3\7f""Df**T~\90\90;\ab\88\88\0b"
  "\83FF\8c\ca\ee\ee\c7)\b8\b8k\d3\14\14(<\de\de\a7y^^\bc\e2\0b\0b\16\1d\db"
  "\db\adv\e0\e0\db;22dV::tN\0a\0a\14\1eII\92\db\06\06\0c\0a$$Hl\\\b8\e4\c2"
  "\c2\9f]\d3\d3\bdn\ac\acC\efbb\c4\a6\91\919\a8\95\951\a4\e4\e4\d37yy\f2"
  "\8b\e7\e7\d52\c8\c8\8bC77nYmm\da\b7\8d\8d\01\8c\d5\d5\b1dNN\9c\d2\a9\a9"
  "I\e0ll\d8\b4VV\ac\fa\f4\f4\f3\07\ea\ea\cf%ee\ca\afzz\f4\8e\ae\aeG\e9\08"
  "\08\10\18\ba\bao\d5xx\f0\88%%Jo..\r\1c\1c8$\a6\a6W\f1\b4\b4s\c7\c6\c6\97"
  "Q\e8\e8\cb#\dd\dd\a1|tt\e8\9c\1f\1f>!KK\96\dd\bd\bda\dc\8b\8b\0d\86\8a"
  "\8a\0f\85pp\e0\90>>|B\b5\b5q\c4ff\cc\aaHH\90\d8\03\03\06\05\f6\f6\f7\01"
  "\0e\0e\1c\12aa\c2\a355j_WW\ae\f9\b9\b9i\d0\86\86\17\91\c1\c1\99X\1d\1d"
  ":'\9e\9e'\b9\e1\e1\d98\f8\f8\eb\13\98\98+\b3\11\11"3ii\d2\bb\d9\d9\a9p"
  "\8e\8e\07\89\94\943\a7\9b\9b-\b6\1e\1e<"\87\87\15\92\e9\e9\c9 \ce\ce\87"
  "IUU\aa\ff((Px\df\df\a5z\8c\8c\03\8f\a1\a1Y\f8\89\89\09\80\0d\0d\1a\17\bf"
  "\bfe\da\e6\e6\d71BB\84\c6hh\d0\b8AA\82\c3\99\99)\b0--Zw\0f\0f\1e\11\b0"
  "\b0{\cbTT\a8\fc\bb\bbm\d6\16\16,:\00\00\00\01\00\00\00\02\00\00\00\04\00"
  "\00\00\08\00\00\00\10\00\00\00 \00\00\00@\00\00\00\80\00\00\00\1b\00\00"
  "\006\00\00\00\00\00\00\00\00P\a7\f4QSeA~\c3\a4\17\1a\96^':\cbk\ab;\f1E"
  "\9d\1f\abX\fa\ac\93\03\e3KU\fa0 \f6mv\ad\91v\cc\88%L\02\f5\fc\d7\e5O\d7"
  "\cb*\c5\80D5&\8f\a3b\b5IZ\b1\deg\1b\ba%\98\0e\eaE\e1\c0\fe]\02u/\c3\12"
  "\f0L\81\a3\97F\8d\c6\f9\d3k\e7_\8f\03\95\9c\92\15\ebzm\bf\daYR\95-\83\be"
  "\d4\d3!tX)i\e0ID\c8\c9\8ej\89\c2uxy\8e\f4k>X\99\ddq\b9'\b6O\e1\be\17\ad"
  "\88\f0f\ac \c9\b4:\ce}\18J\dfc\821\1a\e5`3Q\97E\7fSb\e0wd\b1\84\aek\bb"
  "\1c\a0\81\fe\94+\08\f9XhHp\19\fdE\8f\87l\de\94\b7\f8{R#\d3s\ab\e2\02Kr"
  "W\8f\1f\e3*\abUf\07(\eb\b2\03\c2\b5/\9a{\c5\86\a5\087\d3\f2\87(0\b2\a5"
  "\bf#\baj\03\02\\82\16\ed+\1c\cf\8a\92\b4y\a7\f0\f2\07\f3\a1\e2iN\cd\f4"
  "\dae\d5\be\05\06\1fb4\d1\8a\fe\a6\c4\9dS.4\a0U\f3\a22\e1\8a\05u\eb\f6\a4"
  "9\ec\83\0b\aa\ef`@\06\9fq^Q\10n\bd\f9\8a!>=\06\dd\96\ae\05>\ddF\bd\e6M"
  "\b5\8dT\91\05]\c4qo\d4\06\04\ff\15P`$\fb\98\19\97\e9\bd\d6\ccC@\89w\9e"
  "\d9g\bdB\e8\b0\88\8b\89\078[\19\e7\db\ee\c8yG\0a|\a1\e9\0fB|\c9\1e\84\f8"
  "\00\00\00\00\83\86\80\09H\ed+2\acp\11\1eNrZl\fb\ff\0e\fdV8\85\0f\1e\d5"
  "\ae='9-6d\d9\0f\0a!\a6\h\d1T[\9b:.6$\b1g\0a\0c\0f\e7W\93\d2\96\ee\b4\9e"
  "\91\9b\1bO\c5\c0\80\a2 \dcaiKwZ\16\1a\12\1c\0a\ba\93\e2\e5*\a0\c0C\e0""
  "<\1d\17\1b\12\0b\0d\09\0e\ad\c7\8b\f2\b9\a8\b6-\c8\a9\1e\14\85\19\f1WL"
  "\07u\af\bb\dd\99\ee\fd`\7f\a3\9f&\01\f7\bc\f5r\\c5;fD4~\fb[v)C\8b\dc\c6"
  "#\cbh\fc\ed\b6c\f1\e4\b8\ca\dc1\d7\10\85cB@"\97\13 \11\c6\84}$J\85\f8="
  "\bb\d2\112\f9\aem\a1)\c7K/\9e\1d\f30\b2\dc\ecR\86\0d\d0\e3\c1wl\16\b3+"
  "\99\b9p\a9\faH\94\11"d\e9G\c4\8c\fc\a8\1a?\f0\a0\d8,}V\ef\903"\c7NI\87"
  "\c1\d18\d9\fe\a2\ca\8c6\0b\d4\98\cf\81\f5\a6(\dez\a5&\8e\b7\da\a4\bf\ad"
  "?\e4\9d:,\0d\92xP\9b\cc_jbF~T\c2\13\8d\f6\e8\b8\d8\90^\f79.\f5\af\c3\82"
  "\be\80]\9f|\93\d0i\a9-\d5o\b3\12%\cf;\99\ac\c8\a7}\18\10nc\9c\e8{\bb;\db"
  "\09x&\cd\f4\18Yn\01\b7\9a\ec\a8\9aO\83en\95\e6~\e6\ff\aa\08\cf\bc!\e6\e8"
  "\15\ef\d9\9b\e7\ba\ce6oJ\d4\09\9f\ea\d6|\b0)\af\b2\a411#?*0\94\a5\c6\c0"
  "f\a257\bcNt\a6\ca\82\fc\b0\d0\90\e0\15\d8\a73J\98\04\f1\f7\da\ecA\0eP\cd"
  "\7f/\f6\91\17\8d\d6MvM\b0\efCTM\aa\cc\df\04\96\e4\e3\b5\d1\9e\1b\88jL\b8"
  "\1f,\c1\7fQeF\04\ea^\9d]5\8c\01st\87\fa.A\0b\fbZ\1dg\b3R\d2\db\923V\10"
  "\e9\13G\d6m\8ca\d7\9az\0c\a17\8e\14\f8Y\89<\13\eb\ee'\a9\ce5\c9a\b7\ed"
  "\e5\1c\e1<\b1GzY\df\d2\9c?s\f2Uy\ce\14\18\bf7\c7s\ea\cd\f7S[\aa\fd_\14"
  "o=\df\86\dbDx\81\f3\af\ca>\c4h\b9,4$8_@\a3\c2r\c3\1d\16\0c%\e2\bc\8bI<"
  "(A\95\0d\ffq\01\a89\de\b3\0c\08\9c\e4\b4\d8\90\c1Vda\84\cb{p\b62\d5t\l"
  "HBW\b8\d0\a7\f4QPeA~S\a4\17\1a\c3^':\96k\ab;\cbE\9d\1f\f1X\fa\ac\ab\03"
  "\e3K\93\fa0 Umv\ad\f6v\cc\88\91L\02\f5%\d7\e5O\fc\cb*\c5\d7D5&\80\a3b\b5"
  "\8fZ\b1\deI\1b\ba%g\0e\eaE\98\c0\fe]\e1u/\c3\02\f0L\81\12\97F\8d\a3\f9"
  "\d3k\c6_\8f\03\e7\9c\92\15\95zm\bf\ebYR\95\da\83\be\d4-!tX\d3i\e0I)\c8"
  "\c9\8eD\89\c2ujy\8e\f4x>X\99kq\b9'\ddO\e1\be\b6\ad\88\f0\17\ac \c9f:\ce"
  "}\b4J\dfc\181\1a\e5\823Q\97`\7fSbEwd\b1\e0\aek\bb\84\a0\81\fe\1c+\08\f9"
  "\94hHpX\fdE\8f\19l\de\94\87\f8{R\b7\d3s\ab#\02Kr\e2\8f\1f\e3W\abUf*(\eb"
  "\b2\07\c2\b5/\03{\c5\86\9a\087\d3\a5\87(0\f2\a5\bf#\b2j\03\02\ba\82\16"
  "\ed\\1c\cf\8a+\b4y\a7\92\f2\07\f3\f0\e2iN\a1\f4\dae\cd\be\05\06\d5b4\d1"
  "\1f\fe\a6\c4\8aS.4\9dU\f3\a2\a0\e1\8a\052\eb\f6\a4u\ec\83\0b9\ef`@\aa\9f"
  "q^\06\10n\bdQ\8a!>\f9\06\dd\96=\05>\dd\ae\bd\e6MF\8dT\91\b5]\c4q\05\d4"
  "\06\04o\15P`\ff\fb\98\19$\e9\bd\d6\97C@\89\cc\9e\d9gwB\e8\b0\bd\8b\89\07"
  "\88[\19\e78\ee\c8y\db\0a|\a1G\0fB|\e9\1e\84\f8\c9\00\00\00\00\86\80\09"
  "\83\ed+2Hp\11\1e\acrZlN\ff\0e\fd\fb8\85\0fV\d5\ae=\1e9-6'\d9\0f\0ad\a6"
  "\h!T[\9b\d1.6$:g\0a\0c\b1\e7W\93\0f\96\ee\b4\d2\91\9b\1b\9e\c5\c0\80O "
  "\dca\a2KwZi\1a\12\1c\16\ba\93\e2\0a*\a0\c0\e5\e0"<C\17\1b\12\1d\0d\09\0e"
  "\0b\c7\8b\f2\ad\a8\b6-\b9\a9\1e\14\c8\19\f1W\85\07u\afL\dd\99\ee\bb`\7f"
  "\a3\fd&\01\f7\9f\f5r\\bc;fD\c5~\fb[4)C\8bv\c6#\cb\dc\fc\ed\b6h\f1\e4\b8"
  "c\dc1\d7\ca\85cB\10"\97\13@\11\c6\84 $J\85}=\bb\d2\f82\f9\ae\11\a1)\c7"
  "m/\9e\1dK0\b2\dc\f3R\86\0d\ec\e3\c1w\d0\16\b3+l\b9p\a9\99H\94\11\fad\e9"
  "G"\8c\fc\a8\c4?\f0\a0\1a,}V\d8\903"\efNI\87\c7\d18\d9\c1\a2\ca\8c\fe\0b"
  "\d4\986\81\f5\a6\cf\dez\a5(\8e\b7\da&\bf\ad?\a4\9d:,\e4\92xP\0d\cc_j\9b"
  "F~Tb\13\8d\f6\c2\b8\d8\90\e8\f79.^\af\c3\82\f5\80]\9f\be\93\d0i|-\d5o\a9"
  "\12%\cf\b3\99\ac\c8;}\18\10\a7c\9c\e8n\bb;\db{x&\cd\09\18Yn\f4\b7\9a\ec"
  "\01\9aO\83\a8n\95\e6e\e6\ff\aa~\cf\bc!\08\e8\15\ef\e6\9b\e7\ba\d96oJ\ce"
  "\09\9f\ea\d4|\b0)\d6\b2\a41\af#?*1\94\a5\c60f\a25\c0\bcNt7\ca\82\fc\a6"
  "\d0\90\e0\b0\d8\a73\15\98\04\f1J\da\ecA\f7P\cd\7f\0e\f6\91\17/\d6Mv\8d"
  "\b0\efCMM\aa\ccT\04\96\e4\df\b5\d1\9e\e3\88jL\1b\1f,\c1\b8QeF\7f\ea^\9d"
  "\045\8c\01]t\87\fasA\0b\fb.\1dg\b3Z\d2\db\92RV\10\e93G\d6m\13a\d7\9a\8c"
  "\0c\a17z\14\f8Y\8e<\13\eb\89'\a9\ce\ee\c9a\b75\e5\1c\e1\ed\b1Gz<\df\d2"
  "\9cYs\f2U?\ce\14\18y7\c7s\bf\cd\f7S\ea\aa\fd_[o=\df\14\dbDx\86\f3\af\ca"
  "\81\c4h\b9>4$8,@\a3\c2_\c3\1d\16r%\e2\bc\0cI<(\8b\95\0d\ffA\01\a89q\b3"
  "\0c\08\de\e4\b4\d8\9c\c1Vd\90\84\cb{a\b62\d5p\lHtW\b8\d0B\f4QP\a7A~Se\17"
  "\1a\c3\a4':\96^\ab;\cbk\9d\1f\f1E\fa\ac\abX\e3K\93\030 U\fav\ad\f6m\cc"
  "\88\91v\02\f5%L\e5O\fc\d7*\c5\d7\cb5&\80Db\b5\8f\a3\b1\deIZ\ba%g\1b\ea"
  "E\98\0e\fe]\e1\c0/\c3\02uL\81\12\f0F\8d\a3\97\d3k\c6\f9\8f\03\e7_\92\15"
  "\95\9cm\bf\ebzR\95\daY\be\d4-\83tX\d3!\e0I)i\c9\8eD\c8\c2uj\89\8e\f4xy"
  "X\99k>\b9'\ddq\e1\be\b6O\88\f0\17\ad \c9f\ac\ce}\b4:\dfc\18J\1a\e5\821"
  "Q\97`3SbE\7fd\b1\e0wk\bb\84\ae\81\fe\1c\a0\08\f9\94+HpXhE\8f\19\fd\de\94"
  "\87l{R\b7\f8s\ab#\d3Kr\e2\02\1f\e3W\8fUf*\ab\eb\b2\07(\b5/\03\c2\c5\86"
  "\9a{7\d3\a5\08(0\f2\87\bf#\b2\a5\03\02\baj\16\ed\\82\cf\8a+\1cy\a7\92\b4"
  "\07\f3\f0\f2iN\a1\e2\dae\cd\f4\05\06\d5\be4\d1\1fb\a6\c4\8a\fe.4\9dS\f3"
  "\a2\a0U\8a\052\e1\f6\a4u\eb\83\0b9\ec`@\aa\efq^\06\9fn\bdQ\10!>\f9\8a\dd"
  "\96=\06>\dd\ae\05\e6MF\bdT\91\b5\8d\c4q\05]\06\04o\d4P`\ff\15\98\19$\fb"
  "\bd\d6\97\e9@\89\ccC\d9gw\9e\e8\b0\bdB\89\07\88\8b\19\e78[\c8y\db\ee|\a1"
  "G\0aB|\e9\0f\84\f8\c9\1e\00\00\00\00\80\09\83\86+2H\ed\11\1e\acpZlNr\0e"
  "\fd\fb\ff\85\0fV8\ae=\1e\d5-6'9\0f\0ad\d9\h!\a6[\9b\d1T6$:.\0a\0c\b1gW"
  "\93\0f\e7\ee\b4\d2\96\9b\1b\9e\91\c0\80O\c5\dca\a2 wZiK\12\1c\16\1a\93"
  "\e2\0a\ba\a0\c0\e5*"<C\e0\1b\12\1d\17\09\0e\0b\0d\8b\f2\ad\c7\b6-\b9\a8"
  "\1e\14\c8\a9\f1W\85\19u\afL\07\99\ee\bb\dd\7f\a3\fd`\01\f7\9f&r\\bc\f5"
  "fD\c5;\fb[4~C\8bv)#\cb\dc\c6\ed\b6h\fc\e4\b8c\f11\d7\ca\dccB\10\85\97\13"
  "@"\c6\84 \11J\85}$\bb\d2\f8=\f9\ae\112)\c7m\a1\9e\1dK/\b2\dc\f30\86\0d"
  "\ecR\c1w\d0\e3\b3+l\16p\a9\99\b9\94\11\faH\e9G"d\fc\a8\c4\8c\f0\a0\1a?"
  "}V\d8,3"\ef\90I\87\c7N8\d9\c1\d1\ca\8c\fe\a2\d4\986\0b\f5\a6\cf\81z\a5"
  "(\de\b7\da&\8e\ad?\a4\bf:,\e4\9dxP\0d\92_j\9b\cc~TbF\8d\f6\c2\13\d8\90"
  "\e8\b89.^\f7\c3\82\f5\af]\9f\be\80\d0i|\93\d5o\a9-%\cf\b3\12\ac\c8;\99"
  "\18\10\a7}\9c\e8nc;\db{\bb&\cd\09xYn\f4\18\9a\ec\01\b7O\83\a8\9a\95\e6"
  "en\ff\aa~\e6\bc!\08\cf\15\ef\e6\e8\e7\ba\d9\9boJ\ce6\9f\ea\d4\09\b0)\d6"
  "|\a41\af\b2?*1#\a5\c60\94\a25\c0fNt7\bc\82\fc\a6\ca\90\e0\b0\d0\a73\15"
  "\d8\04\f1J\98\ecA\f7\da\cd\7f\0eP\91\17/\f6Mv\8d\d6\efCM\b0\aa\ccTM\96"
  "\e4\df\04\d1\9e\e3\b5jL\1b\88,\c1\b8\1feF\7fQ^\9d\04\ea\8c\01]5\87\fas"
  "t\0b\fb.Ag\b3Z\1d\db\92R\d2\10\e93V\d6m\13G\d7\9a\8ca\a17z\0c\f8Y\8e\14"
  "\13\eb\89<\a9\ce\ee'a\b75\c9\1c\e1\ed\e5Gz<\b1\d2\9cY\df\f2U?s\14\18y\ce"
  "\c7s\bf7\f7S\ea\cd\fd_[\aa=\df\14oDx\86\db\af\ca\81\f3h\b9>\c4$8,4\a3\c2"
  "_@\1d\16r\c3\e2\bc\0c%<(\8bI\0d\ffA\95\a89q\01\0c\08\de\b3\b4\d8\9c\e4"
  "Vd\90\c1\cb{a\842\d5p\b6lHt\\b8\d0BWQP\a7\f4~SeA\1a\c3\a4\17:\96^';\cb"
  "k\ab\1f\f1E\9d\ac\abX\faK\93\03\e3 U\fa0\ad\f6mv\88\91v\cc\f5%L\02O\fc"
  "\d7\e5\c5\d7\cb*&\80D5\b5\8f\a3b\deIZ\b1%g\1b\baE\98\0e\ea]\e1\c0\fe\c3"
  "\02u/\81\12\f0L\8d\a3\97Fk\c6\f9\d3\03\e7_\8f\15\95\9c\92\bf\ebzm\95\da"
  "YR\d4-\83\beX\d3!tI)i\e0\8eD\c8\c9uj\89\c2\f4xy\8e\99k>X'\ddq\b9\be\b6"
  "O\e1\f0\17\ad\88\c9f\ac }\b4:\cec\18J\df\e5\821\1a\97`3QbE\7fS\b1\e0wd"
  "\bb\84\aek\fe\1c\a0\81\f9\94+\08pXhH\8f\19\fdE\94\87l\deR\b7\f8{\ab#\d3"
  "sr\e2\02K\e3W\8f\1ff*\abU\b2\07(\eb/\03\c2\b5\86\9a{\c5\d3\a5\0870\f2\87"
  "(#\b2\a5\bf\02\baj\03\ed\\82\16\8a+\1c\cf\a7\92\b4y\f3\f0\f2\07N\a1\e2"
  "ie\cd\f4\da\06\d5\be\05\d1\1fb4\c4\8a\fe\a64\9dS.\a2\a0U\f3\052\e1\8a\a4"
  "u\eb\f6\0b9\ec\83@\aa\ef`^\06\9fq\bdQ\10n>\f9\8a!\96=\06\dd\dd\ae\05>M"
  "F\bd\e6\91\b5\8dTq\05]\c4\04o\d4\06`\ff\15P\19$\fb\98\d6\97\e9\bd\89\cc"
  "C@gw\9e\d9\b0\bdB\e8\07\88\8b\89\e78[\19y\db\ee\c8\a1G\0a||\e9\0fB\f8\c9"
  "\1e\84\00\00\00\00\09\83\86\802H\ed+\1e\acp\11lNrZ\fd\fb\ff\0e\0fV8\85"
  "=\1e\d5\ae6'9-\0ad\d9\0fh!\a6\\9b\d1T[$:.6\0c\b1g\0a\93\0f\e7W\b4\d2\96"
  "\ee\1b\9e\91\9b\80O\c5\c0a\a2 \dcZiKw\1c\16\1a\12\e2\0a\ba\93\c0\e5*\a0"
  "<C\e0"\12\1d\17\1b\0e\0b\0d\09\f2\ad\c7\8b-\b9\a8\b6\14\c8\a9\1eW\85\19"
  "\f1\afL\07u\ee\bb\dd\99\a3\fd`\7f\f7\9f&\01\\bc\f5rD\c5;f[4~\fb\8bv)C\cb"
  "\dc\c6#\b6h\fc\ed\b8c\f1\e4\d7\ca\dc1B\10\85c\13@"\97\84 \11\c6\85}$J\d2"
  "\f8=\bb\ae\112\f9\c7m\a1)\1dK/\9e\dc\f30\b2\0d\ecR\86w\d0\e3\c1+l\16\b3"
  "\a9\99\b9p\11\faH\94G"d\e9\a8\c4\8c\fc\a0\1a?\f0V\d8,}"\ef\903\87\c7NI"
  "\d9\c1\d18\8c\fe\a2\ca\986\0b\d4\a6\cf\81\f5\a5(\dez\da&\8e\b7?\a4\bf\ad"
  ",\e4\9d:P\0d\92xj\9b\cc_TbF~\f6\c2\13\8d\90\e8\b8\d8.^\f79\82\f5\af\c3"
  "\9f\be\80]i|\93\d0o\a9-\d5\cf\b3\12%\c8;\99\ac\10\a7}\18\e8nc\9c\db{\bb"
  ";\cd\09x&n\f4\18Y\ec\01\b7\9a\83\a8\9aO\e6en\95\aa~\e6\ff!\08\cf\bc\ef"
  "\e6\e8\15\ba\d9\9b\e7J\ce6o\ea\d4\09\9f)\d6|\b01\af\b2\a4*1#?\c60\94\a5"
  "5\c0f\a2t7\bcN\fc\a6\ca\82\e0\b0\d0\903\15\d8\a7\f1J\98\04A\f7\da\ec\7f"
  "\0eP\cd\17/\f6\91v\8d\d6MCM\b0\ef\ccTM\aa\e4\df\04\96\9e\e3\b5\d1L\1b\88"
  "j\c1\b8\1f,F\7fQe\9d\04\ea^\01]5\8c\fast\87\fb.A\0b\b3Z\1dg\92R\d2\db\e9"
  "3V\10m\13G\d6\9a\8ca\d77z\0c\a1Y\8e\14\f8\eb\89<\13\ce\ee'\a9\b75\c9a\e1"
  "\ed\e5\1cz<\b1G\9cY\df\d2U?s\f2\18y\ce\14s\bf7\c7S\ea\cd\f7_[\aa\fd\df"
  "\14o=x\86\dbD\ca\81\f3\af\b9>\c4h8,4$\c2_@\a3\16r\c3\1d\bc\0c%\e2(\8bI"
  "<\ffA\95\0d9q\01\a8\08\de\b3\0c\d8\9c\e4\b4d\90\c1V{a\84\cb\d5p\b62Ht\"
  "l\d0BW\b8R\09j\d506\a58\bf@\a3\9e\81\f3\d7\fb|\e39\82\9b/\ff\874\8eCD\c4"
  "\de\e9\cbT{\942\a6\c2#=\eeL\95\0bB\fa\c3N\08.\a1f(\d9$\b2v[\a2Im\8b\d1"
  "%r\f8\f6d\86h\98\16\d4\a4\\cc]e\b6\92lpHP\fd\ed\b9\da^\15FW\a7\8d\9d\84"
  "\90\d8\ab\00\8c\bc\d3\0a\f7\e4X\05\b8\b3E\06\d0,\1e\8f\ca?\0f\02\c1\af"
  "\bd\03\01\13\8ak:\91\11AOg\dc\ea\97\f2\cf\ce\f0\b4\e6s\96\act"\e7\ad5\85"
  "\e2\f97\e8\1cu\dfnG\f1\1aq\1d)\c5\89o\b7b\0e\aa\18\be\1b\fcV>K\c6\d2y "
  "\9a\db\c0\fex\cdZ\f4\1f\dd\a83\88\07\c71\b1\12\10Y'\80\ec_`Q\7f\a9\19\b5"
  "J\0d-\e5z\9f\93\c9\9c\ef\a0\e0;M\ae*\f5\b0\c8\eb\bb<\83S\99a\17+\04~\ba"
  "w\d6&\e1i\14cU!\0c}\00\08\08\02\00\00\08\00\02\00\00\02\02\08\08\02\00"
  "\00\00\02\02\08\08\00\02\00\08\00\02\00\00\02\02\08\08\00\00\08\08\02\00"
  "\00\08\02\02\08\00\00\02\08\00\02\00\00\00\02\00\00\00\00\02\00\08\00\00"
  "\00\08\00\02\00\00\00\00\08\00\02\00\08\08\00\02\08\08\02\00\00\08\02\02"
  "\08\00\00\00\08\00\02\02\00\00\00\00\08\00\00\00\08\08\00\02\00\08\02\00"
  "\08\00\00\02\08\00\02\02\00\08\02\00\00\00\00\00\00\00\00\02\08\08\02\00"
  "\08\00\02\02\00\08\00\00\08\08\02\00\00\08\00\02\08\00\00\00\08\00\02\02"
  "\00\08\02\00\08\00\00\00\08\08\00\02\00\00\02\02\08\08\00\02\00\00\00\02"
  "\00\00\02\00\00\08\02\02\08\08\02\00\08\08\00\00\00\08\02\02\08\00\02\00"
  "\00\00\02\02\08\00\00\02\00\08\00\00\00\00\00\00\00\08\00\00\00\00\02\02"
  "\08\00\02\00\08\08\02\02\00\00\00\02\00\08\02\00\08\00\00\02\08\08\00\10"
  "\80\10@\00\00\00\00\00\80\10\00\00\00\10@\10\00\00@\10\80\00\00\00\80\00"
  "@\00\80\10\00\00\80\00\00\10\00\10@\10\00\00\00\00\80\00@\10\00\10\00\00"
  "\80\10@\00\00\10@\10\00\00\00\00\00\10\00\10\80\00@\10\00\10@\00\80\00"
  "\00\10\80\10\00\00\00\00@\00\00\00\00\10\00\10\00\10\80\00@\10\80\10\00"
  "\00\80\10@\10\00\00@\00\00\00@\00\00\10\00\10\80\00\00\10\80\10@\10\00"
  "\10\00\00\80\10@\00\80\00@\10\80\10\00\10\80\10@\10\00\10\00\10\00\00@"
  "\00\00\00\00\00\00\00@\10\80\00\00\00\00\10\00\10\00\10@\00\80\00\00\00"
  "\00\00@\10\80\10\00\10\80\00@\00\80\10@\00\80\00\00\00\00\00\00\10\00\00"
  "@\10\00\00\00\10\80\10@\00\80\10\00\00\00\10@\10\00\10@\00\00\10\00\10"
  "\80\00\00\00\80\00@\10\80\00@\10\00\00\00\00\00\10@\00\80\10\00\01\00\00"
  "\04\00\01\04\04\00\01\00\00\01\01\00\04\01\00\04\00\00\00\00\04\01\01\00"
  "\04\00\01\04\00\00\01\00\04\00\00\04\00\00\00\04\04\01\00\00\00\01\01\04"
  "\04\01\01\00\00\01\00\00\00\01\00\04\04\00\00\00\00\01\00\04\00\00\01\04"
  "\04\00\01\00\00\01\01\00\00\01\01\04\04\00\00\04\00\01\00\00\04\01\00\04"
  "\04\00\01\00\04\01\01\04\00\00\00\04\04\00\01\04\00\00\00\00\00\00\00\00"
  "\04\01\01\04\00\00\01\04\04\00\01\00\00\01\00\00\00\00\00\04\00\01\01\00"
  "\00\01\00\04\00\00\00\04\04\01\01\00\04\00\00\00\00\00\01\04\04\00\01\04"
  "\00\01\00\04\04\01\00\04\00\00\00\00\04\01\01\04\04\01\00\00\00\01\01\04"
  "\00\01\00\00\04\00\00\00\04\01\01\04\04\00\00\04\00\00\01\00\04\01\01\00"
  "\04\00\01\04\00\00\01\00\04\00\00\00\00\01\00\04\04\01\01\00\00\01\00\00"
  "\04\01\01\04\00\00\01\00\00\00\00\04\04\08\10@\00\00\10\00\10\08\00\00"
  "\00\08\10@\10\00\00\00\00\00\00@\10\08\10\00\10\08\00@\00\00\10@\10\08"
  "\00\00\10\00\00\00\10\08\10\00\00\08\00\00\10\08\10@\00\00\00@\00\00\00"
  "\00\10\08\00@\10\00\10@\00\00\10\00\00\08\00\00\00\00\10@\00\08\10\00\10"
  "\00\00@\10\00\10\00\00\08\10\00\00\00\00\00\00\08\00@\00\00\10@\10\00\10"
  "\00\10\08\00@\10\08\10@\10\00\00@\00\08\00@\10\08\10\00\00\00\00@\00\08"
  "\00\00\10\00\10@\00\00\10\00\10\08\00\00\00\00\00@\10\08\10\00\10\00\00"
  "\00\00\00\10\00\00\08\00@\00\00\00\00\00\08\00@\10\00\10@\10\00\10\00\00"
  "\00\00\00\10\08\10@\10\08\10@\00\00\00@\00\08\10@\10\08\00\00\00\00\10"
  "\00\10\08\10@\00\08\00@\00\00\10@\00\00\00@\10\08\10\00\10\08\10\00\00"
  "\00\00\00\10\08\00\00\10\00\10@\10\00\00\00\08\00\00\01\00\00\04\00\00"
  " \04\01\08 \00\01\08\00\04\00\08 \04\01\00\00\00\01\08\00\00\01\00 \00"
  "\00\00 \00\00\08\00\04\01\00 \04\00\08 \00\01\08\00\04\01\08\00\00\00\00"
  "\00\04\01\00\00\00\00\08 \00\01\00 \04\00\00\00\04\00\08 \04\01\00\00\00"
  "\00\00 \00\00\08 \00\00\00 \04\00\08 \04\01\08 \00\01\00\00\00\01\08\00"
  "\04\00\00 \04\00\00\00\04\01\08\00\04\01\08 \04\00\08 \00\01\00\00\00\01"
  "\08\00\00\01\00 \00\00\00 \00\00\08\00\04\00\08\00\00\00\08\00\04\01\00"
  " \04\01\08\00\00\00\00 \04\01\00\00\00\00\08\00\04\00\00 \00\01\00 \04"
  "\00\08\00\04\00\00\00\00\00\00 \04\01\08 \00\01\08\00\04\01\08 \04\00\00"
  "\00\00\01\00\00\04\01\00 \00\01\08\00\04\00\08 \04\00\00 \00\00\00 \04"
  "\01\00\00\00\01\08 \00\00\08@\00\00\80@\00 \00\00\00\00\00\00  \80@\00"
  " \00\00 \00\00@ \00\80\00\00 \00@ \00\00@  \80\00  \00\00\00\00\80\00 "
  "\00\80@\00\00\80\00\00 \80@  \00\00\00 \00@ \00\80@\00 \80\00\00\00\00"
  "\00 \00\00@\00\00\00\00  \80@\00 \80@  \80\00\00 \80\00\00\00\80@ \00\00"
  "@\00\00\00\00  \00@  \00\00 \00\80@ \00\00\00\00\00\80\00 \00\80@  \00"
  "\00  \80@\00 \00\00\00\00\00\00 \00\80\00\00\00\80\00 \00\00@\00 \80\00"
  "\00 \00@\00 \00@  \80\00  \00@\00\00\00@  \80\00  \00\00\00 \00@ \00\80"
  "@\00\00\80\00\00 \80@  \00\00\00\00\00\00 \00\00@\00\00\80@ \00\80\00 "
  " \80\00\00 \80@ \00\00@\00\00\00@\00 \80\00@\00\00\00\02\00\00\00\02\00"
  "\01\04\00\00\01\04B\00\01\04@\00\00\00B";
data d_BBBBBBBBBBBBBB1122447788CCEE(offset: 11379) =
  "\01\04\02\00\01\04\02\00\00\00@\00\01\04\00\00\00\00B\00\01\00@\00\01\04"
  "\02\00\00\04\02\00\01\00@\00\00\04@\00\00\04B\00\01\00\00\00\00\00\02\00"
  "\01\04\00\00\01\00B\00\00\04@\00\01\04B\00\00\00B\00\01\04\00\00\00\04"
  "B\00\00\04@\00\01\00\02\00\00\00\00\00\01\04B\00\00\00@\00\01\04@\00\01"
  "\04\02\00\00\00@\00\00\00\02\00\00\00\00\00\01\04@\00\01\04\02\00\01\04"
  "B\00\00\00B\00\00\00\00\00\00\00\02\00\00\04\00\00\01\04\00\00\00\00\02"
  "\00\01\00\00\00\00\04\02\00\01\00\02\00\01\00B\00\00\04\02\00\00\00@\00"
  "\00\04B\00\01\00\00\00\01\00B\00\01\04\00\00\00\04@\00\00\04B\00\01\04"
  "\00\00\01\00B\00\01\00@\00\01\04@\00\00\80\00\80 \00\00\82 \80\00\02\00"
  "\00\00\00\00\00\00\02 \80\00\80\00\00\00\80 \80\00\82 \80\00\00\00\00\00"
  "\00 \00\00\82\00\80\00\02\00\80\00\82\00\80\00\02 \80\00\00 \00\00\80 "
  "\00\00\02\00\80\00\82\00\80\00\80\00\00\00\02 \80\00\82 \80\00\00 \00\00"
  "\00\00\00\00\82\00\00\00\00 \00\00\80\00\80\00\02 \80\00\80 \00\00\80\00"
  "\00\00\02\00\00\00\82 \80\00\00\00\00\00\80\00\00\00\02\00\80\00\00 \80"
  "\00\82 \80\00\02\00\00\00\00 \00\00\00\00\00\00\82\00\80\00\80 \80\00\02"
  " \00\00\02 \80\00\80\00\00\00\82 \80\00\00\00\80\00\80\00\00\00\02 \80"
  "\00\82 \00\00\80\00\00\00\80 \80\00\00 \00\00\82\00\80\00\02\00\80\00\02"
  " \00\00\80 \80\00\00\00\00\00\82 \80\00\82\00\00\00\00\00\00\00\00 \80"
  "\00\80 \00\00\02\00\80\00\82\00\01\01\02\02\04\04\07\07\08\08\0b\0b\0d"
  "\0d\0e\0e\10\10\13\13\15\15\16\16\19\19\1a\1a\1c\1c\1f\1f  ##%%&&))**,"
  ",//1122447788;;==>>@@CCEEFFIIJJLLOOQQRRTTWWXX[[]]^^aabbddgghhkkmmnnpps"
  "suuvvyyzz||\7f\7f\80\80\83\83\85\85\86\86\89\89\8a\8a\8c\8c\8f\8f\91\91"
  "\92\92\94\94\97\97\98\98\9b\9b\9d\9d\9e\9e\a1\a1\a2\a2\a4\a4\a7\a7\a8\a8"
  "\ab\ab\ad\ad\ae\ae\b0\b0\b3\b3\b5\b5\b6\b6\b9\b9\ba\ba\bc\bc\bf\bf\c1\c1"
  "\c2\c2\c4\c4\c7\c7\c8\c8\cb\cb\cd\cd\ce\ce\d0\d0\d3\d3\d5\d5\d6\d6\d9\d9"
  "\da\da\dc\dc\df\df\e0\e0\e3\e3\e5\e5\e6\e6\e9\e9\ea\ea\ec\ec\ef\ef\f1\f1"
  "\f2\f2\f4\f4\f7\f7\f8\f8\fb\fb\fd\fd\fe\fe\00\00\00\00\10\00\00\00\00\00"
  "\00 \10\00\00 \00\00\01\00\10\00\01\00\00\00\01 \10\00\01 \00\08\00\00"
  "\10\08\00\00\00\08\00 \10\08\00 \00\08\01\00\10\08\01\00\00\08\01 \10\08"
  "\01  \00\00\000\00\00\00 \00\00 0\00\00  \00\01\000\00\01\00 \00\01 0\00"
  "\01  \08\00\000\08\00\00 \08\00 0\08\00  \08\01\000\08\01\00 \08\01 0\08"
  "\01 \00\00\08\00\10\00\08\00\00\00\08 \10\00\08 \00\00\09\00\10\00\09\00"
  "\00\00\09 \10\00\09 \00\08\08\00\10\08\08\00\00\08\08 \10\08\08 \00\08"
  "\09\00\10\08\09\00\00\08\09 \10\08\09  \00\08\000\00\08\00 \00\08 0\00"
  "\08  \00\09\000\00\09\00 \00\09 0\00\09  \08\08\000\08\08\00 \08\08 0\08"
  "\08  \08\09\000\08\09\00 \08\09 0\08\09 \00\00\00\00\00\00\00\02\00 \00"
  "\00\00 \00\02\00\00 \00\00\00 \02\00  \00\00  \02\04\00\00\00\04\00\00"
  "\02\04 \00\00\04 \00\02\04\00 \00\04\00 \02\04  \00\04  \02\00\04\00\00"
  "\00\04\00\02\00$\00\00\00$\00\02\00\04 \00\00\04 \02\00$ \00\00$ \02\04"
  "\04\00\00\04\04\00\02\04$\00\00\04$\00\02\04\04 \00\04\04 \02\04$ \00\04"
  "$ \02\00\00\00\10\00\00\00\12\00 \00\10\00 \00\12\00\00 \10\00\00 \12\00"
  "  \10\00  \12\04\00\00\10\04\00\00\12\04 \00\10\04 \00\12\04\00 \10\04"
  "\00 \12\04  \10\04  \12\00\04\00\10\00\04\00\12\00$\00\10\00$\00\12\00"
  "\04 \10\00\04 \12\00$ \10\00$ \12\04\04\00\10\04\04\00\12\04$\00\10\04"
  "$\00\12\04\04 \10\04\04 \12\04$ \10\04$ \12\00\00\00\00\01\00\00\00\00"
  "\00\04\00\01\00\04\00\00\00\00\01\01\00\00\01\00\00\04\01\01\00\04\01\02"
  "\00\00\00\03\00\00\00\02\00\04\00\03\00\04\00\02\00\00\01\03\00\00\01\02"
  "\00\04\01\03\00\04\01\00\02\00\00\01\02\00\00\00\02\04\00\01\02\04\00\00"
  "\02\00\01\01\02\00\01\00\02\04\01\01\02\04\01\02\02\00\00\03\02\00\00\02"
  "\02\04\00\03\02\04\00\02\02\00\01\03\02\00\01\02\02\04\01\03\02\04\01\00"
  "\00\00\08\01\00\00\08\00\00\04\08\01\00\04\08\00\00\00\09\01\00\00\09\00"
  "\00\04\09\01\00\04\09\02\00\00\08\03\00\00\08\02\00\04\08\03\00\04\08\02"
  "\00\00\09\03\00\00\09\02\00\04\09\03\00\04\09\00\02\00\08\01\02\00\08\00"
  "\02\04\08\01\02\04\08\00\02\00\09\01\02\00\09\00\02\04\09\01\02\04\09\02"
  "\02\00\08\03\02\00\08\02\02\04\08\03\02\04\08\02\02\00\09\03\02\00\09\02"
  "\02\04\09\03\02\04\09\00\00\00\00\00\00\10\00\00\01\00\00\00\01\10\00\08"
  "\00\00\00\08\00\10\00\08\01\00\00\08\01\10\00\00\10\00\00\00\10\10\00\00"
  "\11\00\00\00\11\10\00\08\10\00\00\08\10\10\00\08\11\00\00\08\11\10\00\00"
  "\00\00\04\00\00\10\04\00\01\00\04\00\01\10\04\08\00\00\04\08\00\10\04\08"
  "\01\00\04\08\01\10\04\00\10\00\04\00\10\10\04\00\11\00\04\00\11\10\04\08"
  "\10\00\04\08\10\10\04\08\11\00\04\08\11\10\04\00\00\02\00\00\00\12\00\00"
  "\01\02\00\00\01\12\00\08\00\02\00\08\00\12\00\08\01\02\00\08\01\12\00\00"
  "\10\02\00\00\10\12\00\00\11\02\00\00\11\12\00\08\10\02\00\08\10\12\00\08"
  "\11\02\00\08\11\12\00\00\00\02\04\00\00\12\04\00\01\02\04\00\01\12\04\08"
  "\00\02\04\08\00\12\04\08\01\02\04\08\01\12\04\00\10\02\04\00\10\12\04\00"
  "\11\02\04\00\11\12\04\08\10\02\04\08\10\12\04\08\11\02\04\08\11\12\04\00"
  "\00\00\00\00\00\00\10\00\00\01\00\00\00\01\10\04\00\00\00\04\00\00\10\04"
  "\00\01\00\04\00\01\10\00\00\00 \00\00\000\00\00\01 \00\00\010\04\00\00"
  " \04\00\000\04\00\01 \04\00\010\00\00\10\00\00\00\10\10\00\00\11\00\00"
  "\00\11\10\04\00\10\00\04\00\10\10\04\00\11\00\04\00\11\10\00\00\10 \00"
  "\00\100\00\00\11 \00\00\110\04\00\10 \04\00\100\04\00\11 \04\00\110\00"
  "\10\00\00\00\10\00\10\00\10\01\00\00\10\01\10\04\10\00\00\04\10\00\10\04"
  "\10\01\00\04\10\01\10\00\10\00 \00\10\000\00\10\01 \00\10\010\04\10\00"
  " \04\10\000\04\10\01 \04\10\010\00\10\10\00\00\10\10\10\00\10\11\00\00"
  "\10\11\10\04\10\10\00\04\10\10\10\04\10\11\00\04\10\11\10\00\10\10 \00"
  "\10\100\00\10\11 \00\10\110\04\10\10 \04\10\100\04\10\11 \04\10\110\00"
  "\00\00\00\00\00\00\08\08\00\00\00\08\00\00\08\00\04\00\00\00\04\00\08\08"
  "\04\00\00\08\04\00\08\00\00\02\00\00\00\02\08\08\00\02\00\08\00\02\08\00"
  "\04\02\00\00\04\02\08\08\04\02\00\08\04\02\08\01\00\00\00\01\00\00\08\09"
  "\00\00\00\09\00\00\08\01\04\00\00\01\04\00\08\09\04\00\00\09\04\00\08\01"
  "\00\02\00\01\00\02\08\09\00\02\00\09\00\02\08\01\04\02\00\01\04\02\08\09"
  "\04\02\00\09\04\02\08\00\00\00\02\00\00\00\0a\08\00\00\02\08\00\00\0a\00"
  "\04\00\02\00\04\00\0a\08\04\00\02\08\04\00\0a\00\00\02\02\00\00\02\0a\08"
  "\00\02\02\08\00\02\0a\00\04\02\02\00\04\02\0a\08\04\02\02\08\04\02\0a\01"
  "\00\00\02\01\00\00\0a\09\00\00\02\09\00\00\0a\01\04\00\02\01\04\00\0a\09"
  "\04\00\02\09\04\00\0a\01\00\02\02\01\00\02\0a\09\00\02\02\09\00\02\0a\01"
  "\04\02\02\01\04\02\0a\09\04\02\02\09\04\02\0a\00\00\00\00\00\01\00\00\00"
  "\00\08\00\00\01\08\00\00\00\00\01\00\01\00\01\00\00\08\01\00\01\08\01\10"
  "\00\00\00\10\01\00\00\10\00\08\00\10\01\08\00\10\00\00\01\10\01\00\01\10"
  "\00\08\01\10\01\08\01\00\00 \00\00\01 \00\00\00(\00\00\01(\00\00\00 \01"
  "\00\01 \01\00\00(\01\00\01(\01\10\00 \00\10\01 \00\10\00(\00\10\01(\00"
  "\10\00 \01\10\01 \01\10\00(\01\10\01(\01\00\02\00\00\00\03\00\00\00\02"
  "\08\00\00\03\08\00\00\02\00\01\00\03\00\01\00\02\08\01\00\03\08\01\10\02"
  "\00\00\10\03\00\00\10\02\08\00\10\03\08\00\10\02\00\01\10\03\00\01\10\02"
  "\08\01\10\03\08\01\00\02 \00\00\03 \00\00\02(\00\00\03(\00\00\02 \01\00"
  "\03 \01\00\02(\01\00\03(\01\10\02 \00\10\03 \00\10\02(\00\10\03(\00\10"
  "\02 \01\10\03 \01\10\02(\01\10\03(\01\00\00\00\00\00\00\00\04\00\00\04"
  "\00\00\00\04\04\02\00\00\00\02\00\00\04\02\00\04\00\02\00\04\04\00 \00"
  "\00\00 \00\04\00 \04\00\00 \04\04\02 \00\00\02 \00\04\02 \04\00\02 \04"
  "\04 \00\00\00 \00\00\04 \00\04\00 \00\04\04"\00\00\00"\00\00\04"\00\04"
  "\00"\00\04\04  \00\00  \00\04  \04\00  \04\04" \00\00" \00\04" \04\00""
  " \04\04\00\08\00\00\00\08\00\04\00\08\04\00\00\08\04\04\02\08\00\00\02"
  "\08\00\04\02\08\04\00\02\08\04\04\00(\00\00\00(\00\04\00(\04\00\00(\04"
  "\04\02(\00\00\02(\00\04\02(\04\00\02(\04\04 \08\00\00 \08\00\04 \08\04"
  "\00 \08\04\04"\08\00\00"\08\00\04"\08\04\00"\08\04\04 (\00\00 (\00\04 "
  "(\04\00 (\04\04"(\00\00"(\00\04"(\04\00"(\04\04";
data d_d(offset: 14160) = "\05";
data d_e(offset: 14172) = "\03";
data d_f(offset: 14196) = "\04\00\00\00\05\00\00\00\a48";
data d_g(offset: 14220) = "\02";
data d_h(offset: 14236) = "\ff\ff\ff\ff\ff\ff\ff\ff";
data d_i(offset: 14304) = "P7\00\00\00\00\00\00\05";
data d_j(offset: 14324) = "\06";
data d_k(offset: 14348) =
"\04\00\00\00\07\00\00\00\b88\00\00\00\04";
data d_l(offset: 14372) = "\01";
data d_m(offset: 14388) = "\ff\ff\ff\ff\0a";
data d_n(offset: 14456) = "\e87\00\00\b0>\01";

import function wasi_snapshot_preview1_fd_close(a:int):int;

import function env_emscripten_memcpy_js(a:int, b:int, c:int);

import function wasi_snapshot_preview1_fd_write(a:int, b:int, c:int, d:int):int;

import function env_emscripten_resize_heap(a:int):int;

import function wasi_snapshot_preview1_fd_seek(a:int, b:int, c:int, d:int, e:int):int;

export function wasm_call_ctors() {
  g_d = 81584;
  g_c = 16048;
}

export function create_buff(a:int):int {
  return malloc(a)
}

export function stp(a:int):int {
  14472[0]:int = a;
  if (14468[0]:int) { f_z(1280) }
  return 0;
}

export function sbug(a:int, b:int):int {
  if (a > 1) goto B_a;
  if ((a << 1) + 2000 != b) goto B_a;
  14468[0]:int = a;
  return 0;
  label B_a:
  f_z(1289);
  return 0;
}

export function de3(a:int, b:int, c:int, d:long_ptr@1, e:int, f:int):int {
  var m:int;
  var g:int;
  var o:int;
  var q:int;
  var i:int;
  var j:int;
  var p:int;
  var r:long;
  var k:int = g_a - 336;
  g_a = k;
  var h:int = -1;
  if (14472[0]:int) goto B_a;
  var l:int = f_q(malloc(d + 1), c + 16, c = d - 24);
  (l + c)[0]:byte = 0;
  h = l;
  loop L_b {
    d = 47;
    m = h[0]:ubyte;
    br_table[B_d, B_e, ..B_f](m - 45);
    label B_f:
    if (m != 95) {
      if (m) goto B_c;
      var n:int = f_k(l, c);
      d = malloc(n + 8);
      k[38]:long = 3058035892877010023L;
      m = k + 28;
      if (14476[0]:int) {
        c = k[304]:ubyte;
        if (c != (c + 11856)[0]:ubyte) goto B_h;
        c = k[305]:ubyte;
        if (c != (c + 11856)[0]:ubyte) goto B_h;
        c = k[306]:ubyte;
        if (c != (c + 11856)[0]:ubyte) goto B_h;
        c = k[307]:ubyte;
        if (c != (c + 11856)[0]:ubyte) goto B_h;
        c = k[308]:ubyte;
        if (c != (c + 11856)[0]:ubyte) goto B_h;
        c = k[309]:ubyte;
        if (c != (c + 11856)[0]:ubyte) goto B_h;
        c = k[310]:ubyte;
        if (c != (c + 11856)[0]:ubyte) goto B_h;
        c = k[311]:ubyte;
        if (c != (c + 11856)[0]:ubyte) goto B_h;
        c = 1;
        r = k[304]:long@1;
        if (r == 72340172838076673L) goto B_j;
        if (r == -72340172838076674L) goto B_j;
        if (r == 1012762420019404575L) goto B_j;
        if (r == -1012762420019404576L) goto B_j;
        if (r == -143554428589179391L) goto B_j;
        if (r == 143554428589179390L) goto B_j;
        if (r == -1076658214702948321L) goto B_j;
        if (r == 1076658214702948320L) goto B_j;
        if (r == -1080317445236727807L) goto B_j;
        if (r == 139895198055399904L) goto B_j;
        if (r == -139895198055399905L) goto B_j;
        if (r == 1080317445236727806L) goto B_j;
        if (r == 1009103189485625089L) goto B_j;
        if (r == 75999403371856159L) goto B_j;
        if (r == -75999403371856160L) goto B_j;
        c = r == -1009103189485625090L;
        label B_j:
        if (c) goto B_h;
      }
      h = k[304]:int@1;
      j = (h ^ (c = k[308]:int@1) >> 4) & 252645135;
      c = j << 4 ^ c;
      i = (c << 18 ^ c) & -859045888;
      i = (i >> 18 | i) ^ c;
      h = 
        (i >> 1 ^
         (c = ((h = ((c = h ^ j) << 18 ^ c) & -859045888) >> 18 | h) ^ c)) &
        1431655765;
      c = h ^ c;
      j = (c >> 8 ^ (h = h << 1 ^ i)) & 16711935;
      h = j ^ h;
      i = (h >> 1 ^ (c = j << 8 ^ c)) & 1431655765;
      j = i ^ c;
      c = (((j >> 4 & 251658240) | ((c = i << 1 ^ h) & 65280)) |
           (c << 16 & 16711680)) |
          (c >> 16 & 255);
      loop L_k {
        m[0]:int =
          ((h = 
              (((((((h = c >> (o = select_if(1, 2, i = 33027 >> g & 1))) >> 7 & 3) |
                   (h >> 8 & 60)) <<
                  2) +
                 13392)[0]:int |
                (((h & 63) << 2) + 13136)[0]:int) |
               ((h >> 13 & 252) + 13648)[0]:int) |
              ((((h >> 21 & 15) | ((q = h | c << (i = i | 26)) >> 22 & 48)) << 2) +
               13904)[0]:int) <<
           16) <<
          2 |
          ((c = 
              (((((((c = (j & 268435455) >> o) >> 6 & 3) | (c >> 7 & 60)) << 2) +
                 12112)[64]:int |
                (((c & 63) << 2) + 12112)[0]:int) |
               ((((c >> 13 & 15) | (c >> 14 & 48)) << 2) + 12112)[128]:int) |
              (((((j = c | j << i) >> 22 & 56) | ((c >> 20 & 1) | (c >> 21 & 6))) <<
                2) +
               12112)[192]:int) &
           65535) <<
          2;
        m[1]:int = ((h & 67043328) | c >> 16) << 6 | h >> 26;
        c = q & 268435455;
        m = m + 8;
        g = g + 1;
        if (g != 16) continue L_k;
      }
      label B_h:
      if (n > 0) {
        m = l;
        c = d;
        loop L_m {
          k[34]:long = m[0]:long@1;
          h = g_a - 16;
          g_a = h;
          h[2]:int = k[272]:int@1;
          h[3]:int = k[276]:int@1;
          g = h[2]:int;
          i = (g ^ (j = h[3]:int) >> 4) & 252645135;
          j = i << 4 ^ j;
          i = (j & 65535) ^ (g = g ^ i) >> 16;
          j = i ^ j;
          i = (j >> 2 ^ (g = i << 16 ^ g)) & 858993459;
          g = i ^ g;
          i = (g >> 8 ^ (j = i << 2 ^ j)) & 16711935;
          o = i ^ j;
          q = (o >> 1 ^ (g = i << 8 ^ g)) & 1431655765;
          i = (q ^ g) << 3;
          g = (i ^ k[38]:int) << 28;
          j = ((((((g & 252) + 10064)[0]:int ^
                  ((((((j = k[37]:int ^ i) & 252) + 9808)[0]:int ^
                     ((j >> 8 & 252) + 10320)[0]:int) ^
                    ((j >> 16 & 252) + 10832)[0]:int) ^
                   ((j >> 24 & 252) + 11344)[0]:int)) ^
                 ((g >> 8 & 252) + 10576)[0]:int) ^
                ((g >> 16 & 252) + 11088)[0]:int) ^
               ((g >> 24 & 252) + 11600)[0]:int) ^
              (q << 1 ^ o) << 3;
          g = j ^ k[35]:int;
          i = 
            (((((((((g & 252) + 9808)[0]:int ^ ((g >> 8 & 252) + 10320)[0]:int) ^
                  ((g >> 16 & 252) + 10832)[0]:int) ^
                 ((g >> 24 & 252) + 11344)[0]:int) ^
                (((g = (j ^ k[36]:int) << 28) & 252) + 10064)[0]:int) ^
               ((g >> 8 & 252) + 10576)[0]:int) ^
              ((g >> 16 & 252) + 11088)[0]:int) ^
             ((g >> 24 & 252) + 11600)[0]:int) ^
            i;
          g = i ^ k[33]:int;
          j = 
            (((((((((g & 252) + 9808)[0]:int ^ ((g >> 8 & 252) + 10320)[0]:int) ^
                  ((g >> 16 & 252) + 10832)[0]:int) ^
                 ((g >> 24 & 252) + 11344)[0]:int) ^
                (((g = (i ^ k[34]:int) << 28) & 252) + 10064)[0]:int) ^
               ((g >> 8 & 252) + 10576)[0]:int) ^
              ((g >> 16 & 252) + 11088)[0]:int) ^
             ((g >> 24 & 252) + 11600)[0]:int) ^
            j;
          g = j ^ k[31]:int;
          i = 
            (((((((((g & 252) + 9808)[0]:int ^ ((g >> 8 & 252) + 10320)[0]:int) ^
                  ((g >> 16 & 252) + 10832)[0]:int) ^
                 ((g >> 24 & 252) + 11344)[0]:int) ^
                (((g = (j ^ k[32]:int) << 28) & 252) + 10064)[0]:int) ^
               ((g >> 8 & 252) + 10576)[0]:int) ^
              ((g >> 16 & 252) + 11088)[0]:int) ^
             ((g >> 24 & 252) + 11600)[0]:int) ^
            i;
          g = i ^ k[29]:int;
          j = 
            (((((((((g & 252) + 9808)[0]:int ^ ((g >> 8 & 252) + 10320)[0]:int) ^
                  ((g >> 16 & 252) + 10832)[0]:int) ^
                 ((g >> 24 & 252) + 11344)[0]:int) ^
                (((g = (i ^ k[30]:int) << 28) & 252) + 10064)[0]:int) ^
               ((g >> 8 & 252) + 10576)[0]:int) ^
              ((g >> 16 & 252) + 11088)[0]:int) ^
             ((g >> 24 & 252) + 11600)[0]:int) ^
            j;
          g = j ^ k[27]:int;
          i = 
            (((((((((g & 252) + 9808)[0]:int ^ ((g >> 8 & 252) + 10320)[0]:int) ^
                  ((g >> 16 & 252) + 10832)[0]:int) ^
                 ((g >> 24 & 252) + 11344)[0]:int) ^
                (((g = (j ^ k[28]:int) << 28) & 252) + 10064)[0]:int) ^
               ((g >> 8 & 252) + 10576)[0]:int) ^
              ((g >> 16 & 252) + 11088)[0]:int) ^
             ((g >> 24 & 252) + 11600)[0]:int) ^
            i;
          g = i ^ k[25]:int;
          j = 
            (((((((((g & 252) + 9808)[0]:int ^ ((g >> 8 & 252) + 10320)[0]:int) ^
                  ((g >> 16 & 252) + 10832)[0]:int) ^
                 ((g >> 24 & 252) + 11344)[0]:int) ^
                (((g = (i ^ k[26]:int) << 28) & 252) + 10064)[0]:int) ^
               ((g >> 8 & 252) + 10576)[0]:int) ^
              ((g >> 16 & 252) + 11088)[0]:int) ^
             ((g >> 24 & 252) + 11600)[0]:int) ^
            j;
          g = j ^ k[23]:int;
          i = 
            (((((((((g & 252) + 9808)[0]:int ^ ((g >> 8 & 252) + 10320)[0]:int) ^
                  ((g >> 16 & 252) + 10832)[0]:int) ^
                 ((g >> 24 & 252) + 11344)[0]:int) ^
                (((g = (j ^ k[24]:int) << 28) & 252) + 10064)[0]:int) ^
               ((g >> 8 & 252) + 10576)[0]:int) ^
              ((g >> 16 & 252) + 11088)[0]:int) ^
             ((g >> 24 & 252) + 11600)[0]:int) ^
            i;
          g = i ^ k[21]:int;
          j = 
            (((((((((g & 252) + 9808)[0]:int ^ ((g >> 8 & 252) + 10320)[0]:int) ^
                  ((g >> 16 & 252) + 10832)[0]:int) ^
                 ((g >> 24 & 252) + 11344)[0]:int) ^
                (((g = (i ^ k[22]:int) << 28) & 252) + 10064)[0]:int) ^
               ((g >> 8 & 252) + 10576)[0]:int) ^
              ((g >> 16 & 252) + 11088)[0]:int) ^
             ((g >> 24 & 252) + 11600)[0]:int) ^
            j;
          g = j ^ k[19]:int;
          i = 
            (((((((((g & 252) + 9808)[0]:int ^ ((g >> 8 & 252) + 10320)[0]:int) ^
                  ((g >> 16 & 252) + 10832)[0]:int) ^
                 ((g >> 24 & 252) + 11344)[0]:int) ^
                (((g = (j ^ k[20]:int) << 28) & 252) + 10064)[0]:int) ^
               ((g >> 8 & 252) + 10576)[0]:int) ^
              ((g >> 16 & 252) + 11088)[0]:int) ^
             ((g >> 24 & 252) + 11600)[0]:int) ^
            i;
          g = i ^ k[17]:int;
          j = 
            (((((((((g & 252) + 9808)[0]:int ^ ((g >> 8 & 252) + 10320)[0]:int) ^
                  ((g >> 16 & 252) + 10832)[0]:int) ^
                 ((g >> 24 & 252) + 11344)[0]:int) ^
                (((g = (i ^ k[18]:int) << 28) & 252) + 10064)[0]:int) ^
               ((g >> 8 & 252) + 10576)[0]:int) ^
              ((g >> 16 & 252) + 11088)[0]:int) ^
             ((g >> 24 & 252) + 11600)[0]:int) ^
            j;
          g = j ^ k[15]:int;
          i = 
            (((((((((g & 252) + 9808)[0]:int ^ ((g >> 8 & 252) + 10320)[0]:int) ^
                  ((g >> 16 & 252) + 10832)[0]:int) ^
                 ((g >> 24 & 252) + 11344)[0]:int) ^
                (((g = (j ^ k[16]:int) << 28) & 252) + 10064)[0]:int) ^
               ((g >> 8 & 252) + 10576)[0]:int) ^
              ((g >> 16 & 252) + 11088)[0]:int) ^
             ((g >> 24 & 252) + 11600)[0]:int) ^
            i;
          g = i ^ k[13]:int;
          j = 
            (((((((((g & 252) + 9808)[0]:int ^ ((g >> 8 & 252) + 10320)[0]:int) ^
                  ((g >> 16 & 252) + 10832)[0]:int) ^
                 ((g >> 24 & 252) + 11344)[0]:int) ^
                (((g = (i ^ k[14]:int) << 28) & 252) + 10064)[0]:int) ^
               ((g >> 8 & 252) + 10576)[0]:int) ^
              ((g >> 16 & 252) + 11088)[0]:int) ^
             ((g >> 24 & 252) + 11600)[0]:int) ^
            j;
          g = j ^ k[11]:int;
          i = 
            (((((((((g & 252) + 9808)[0]:int ^ ((g >> 8 & 252) + 10320)[0]:int) ^
                  ((g >> 16 & 252) + 10832)[0]:int) ^
                 ((g >> 24 & 252) + 11344)[0]:int) ^
                (((g = (j ^ k[12]:int) << 28) & 252) + 10064)[0]:int) ^
               ((g >> 8 & 252) + 10576)[0]:int) ^
              ((g >> 16 & 252) + 11088)[0]:int) ^
             ((g >> 24 & 252) + 11600)[0]:int) ^
            i;
          g = i ^ k[9]:int;
          j = 
            (((((((((g & 252) + 9808)[0]:int ^ ((g >> 8 & 252) + 10320)[0]:int) ^
                  ((g >> 16 & 252) + 10832)[0]:int) ^
                 ((g >> 24 & 252) + 11344)[0]:int) ^
                (((g = (i ^ k[10]:int) << 28) & 252) + 10064)[0]:int) ^
               ((g >> 8 & 252) + 10576)[0]:int) ^
              ((g >> 16 & 252) + 11088)[0]:int) ^
             ((g >> 24 & 252) + 11600)[0]:int) ^
            j;
          g = j ^ k[7]:int;
          h[2]:int =
            (i = 
               ((g = 
                   (i = 
                      ((g = 
                          (i = 
                             ((g = 
                                 (j = 
                                    ((i = 
                                        (j = 
                                           ((o = j << 29) ^
                                            (g = 
                                               (((((j = (j ^ k[8]:int) << 28) >> 24 & 252) + 11600)[0]:int ^
                                                 (((j >> 16 & 252) + 11088)[0]:int ^
                                                  (((j >> 8 & 252) + 9808)[192]:int ^
                                                   (((j & 252) + 9808)[64]:int ^
                                                    (((g >> 24 & 252) + 11344)[0]:int ^
                                                     (((g >> 16 & 252) + 10832)[0]:int ^
                                                      (((g & 252) + 9808)[0]:int ^ ((g >> 8 & 252) + 9808)[128]:int))))))) ^
                                                i) <<
                                               29) >>
                                            1) &
                                           1431655765) ^
                                        o) >>
                                     8 ^
                                     (g = j << 1 ^ g)) &
                                    16711935) ^
                                 g) >>
                              2 ^
                              (j = j << 8 ^ i)) &
                             858993459) <<
                          2 ^
                          g) &
                       65535) ^
                      (j = i ^ j) >> 16) ^
                   g) >>
                4 ^
                (j = i << 16 ^ j)) &
               252645135) ^
            j;
          h[3]:int = i << 4 ^ g;
          k[0]:int@1 = h[2]:int;
          k[4]:int@1 = h[3]:int;
          g_a = h + 16;
          if (n <= (p = p + 8)) {
            g = k[7]:ubyte;
            h = g;
            if (g - 17 < -16) goto B_o;
            loop L_q {
              if ((k - h)[8]:ubyte != g) goto B_n;
              let t0 = h < 2;
              h = h - 1;
              if (eqz(t0)) continue L_q;
            }
            goto B_o;
          }
          c[0]:long@1 = k[0]:long;
          goto B_n;
          label B_o:
          f_q(c, k, 8 - g);
          n = n - g;
          label B_n:
          m = m + 8;
          c = c + 8;
          if (n > p) continue L_m;
        }
      }
      c = f_q(l, d, n);
      f_ea(d);
      (c + n)[0]:byte = 0;
      h = c;
      loop L_r {
        d = 47;
        l = h[0]:ubyte;
        br_table[B_t, B_u, ..B_v](l - 45);
        label B_v:
        if (l != 95) {
          if (l) goto B_s;
          d = c + 8;
          l = f_k(d, n - 30);
          (l + d)[0]:byte = 0;
          h = f_q(k, d, select_if(17, l, l >= 17));
          f_ea(c);
          d = h + 272;
          f_q(d, e, select_if(16, f, f >= 16));
          e = select_if(16, l, l >= 16);
          f_r(e + (c = h + 304), select_if(17 - e, 0, e <= 16));
          f_q(c, h, e);
          h[288]:byte = 0;
          r = i64_extend_i32_u(b);
          e = i32_wrap_i64(r);
          e = 
            select_if(e, select_if(-1, e, i32_wrap_i64(r >> 32L)), (b | 1) < 65536);
          n = malloc(e);
          if (eqz(n)) goto B_x;
          if (eqz((n - 4)[0]:ubyte & 3)) goto B_x;
          f_r(n, e);
          label B_x:
          f = 0;
          m = h + 28;
          e = m;
          h = -1;
          if (eqz(c)) goto B_y;
          if (eqz(e)) goto B_y;
          e[60]:int = 10;
          e[0]:int =
            (h = ((h = c[0]:int@1) << 24 | (h & 65280) << 8) |
                 ((h >> 8 & 65280) | h >> 24));
          e[1]:int =
            ((l = c[4]:int@1) << 24 | (l & 65280) << 8) |
            ((l >> 8 & 65280) | l >> 24);
          e[2]:int =
            ((l = c[8]:int@1) << 24 | (l & 65280) << 8) |
            ((l >> 8 & 65280) | l >> 24);
          e[3]:int =
            ((c = c[12]:int@1) << 24 | (c & 65280) << 8) |
            ((c >> 8 & 65280) | c >> 24);
          l = 0;
          loop L_z {
            e[4]:int =
              (h = ((l << 2) + 5408)[0]:int ^
                   (((((((c = e[3]:int) >> 14 & 1020) + 1312)[3]:ubyte << 24 ^ h) ^
                      ((c >> 6 & 1020) + 2336)[2]:ubyte << 16) ^
                     (((c & 255) << 2) + 3360)[1]:ubyte << 8) ^
                    ((c >> 22 & 1020) + 4384)[0]:ubyte));
            e[5]:int = (g = e[1]:int ^ h);
            e[6]:int = (g = e[2]:int ^ g);
            e[7]:int = c ^ g;
            e = e + 16;
            l = l + 1;
            if (l != 10) continue L_z;
          }
          h = 0;
          label B_y:
          if (h < 0) goto B_aa;
          c = m[60]:int;
          if (c <= 0) goto B_aa;
          h = c << 2;
          loop L_ba {
            c = m + (f << 2);
            l = c[0]:int;
            c[0]:int = (e = m + (h << 2))[0]:int;
            e[0]:int = l;
            l = c[1]:int;
            c[1]:int = e[1]:int;
            e[1]:int = l;
            l = c[2]:int;
            c[2]:int = e[2]:int;
            e[2]:int = l;
            l = c[3]:int;
            c[3]:int = e[3]:int;
            e[3]:int = l;
            f = f + 4;
            if (f < (h = h - 4)) continue L_ba;
          }
          f = 1;
          if (m[60]:int <= 1) goto B_aa;
          c = m;
          loop L_ca {
            c[4]:int =
              (((((((e = c[4]:int) >> 14 & 1020) + 4384)[0]:ubyte << 2) + 6480)[0]:int ^
                ((((e >> 22 & 1020) + 4384)[0]:ubyte << 2) + 5456)[0]:int) ^
               ((((e >> 6 & 1020) + 4384)[0]:ubyte << 2) + 7504)[0]:int) ^
              (((((e & 255) << 2) + 4384)[0]:ubyte << 2) + 8528)[0]:int;
            c[5]:int =
              (((((((e = c[5]:int) >> 14 & 1020) + 4384)[0]:ubyte << 2) + 6480)[0]:int ^
                ((((e >> 22 & 1020) + 4384)[0]:ubyte << 2) + 5456)[0]:int) ^
               ((((e >> 6 & 1020) + 4384)[0]:ubyte << 2) + 7504)[0]:int) ^
              (((((e & 255) << 2) + 4384)[0]:ubyte << 2) + 8528)[0]:int;
            c[6]:int =
              (((((((e = c[6]:int) >> 14 & 1020) + 4384)[0]:ubyte << 2) + 6480)[0]:int ^
                ((((e >> 22 & 1020) + 4384)[0]:ubyte << 2) + 5456)[0]:int) ^
               ((((e >> 6 & 1020) + 4384)[0]:ubyte << 2) + 7504)[0]:int) ^
              (((((e & 255) << 2) + 4384)[0]:ubyte << 2) + 8528)[0]:int;
            c[7]:int =
              (((((((e = c[7]:int) >> 14 & 1020) + 4384)[0]:ubyte << 2) + 6480)[0]:int ^
                ((((e >> 22 & 1020) + 4384)[0]:ubyte << 2) + 5456)[0]:int) ^
               ((((e >> 6 & 1020) + 4384)[0]:ubyte << 2) + 7504)[0]:int) ^
              (((((e & 255) << 2) + 4384)[0]:ubyte << 2) + 8528)[0]:int;
            c = c + 16;
            f = f + 1;
            if (f < m[60]:int) continue L_ca;
          }
          label B_aa:
          c = a;
          e = n;
          f = d;
          i = g_a - 16;
          g_a = i;
          l = b;
          if (eqz(l)) goto B_da;
          if (c != e) {
            if (((e | f) | c) & 3) {
              if (l > 15) goto B_ja;
              goto B_ha;
            }
            if (l > 15) goto B_ia;
            goto B_ha;
            label B_ja:
            h = f;
            loop L_la {
              d = c;
              f_p(d, e, m);
              e[0]:byte = e[0]:ubyte ^ h[0]:ubyte;
              e[1]:byte = e[1]:ubyte ^ h[1]:ubyte;
              e[2]:byte = e[2]:ubyte ^ h[2]:ubyte;
              e[3]:byte = e[3]:ubyte ^ h[3]:ubyte;
              e[4]:byte = e[4]:ubyte ^ h[4]:ubyte;
              e[5]:byte = e[5]:ubyte ^ h[5]:ubyte;
              e[6]:byte = e[6]:ubyte ^ h[6]:ubyte;
              e[7]:byte = e[7]:ubyte ^ h[7]:ubyte;
              e[8]:byte = e[8]:ubyte ^ h[8]:ubyte;
              e[9]:byte = e[9]:ubyte ^ h[9]:ubyte;
              e[10]:byte = e[10]:ubyte ^ h[10]:ubyte;
              e[11]:byte = e[11]:ubyte ^ h[11]:ubyte;
              e[12]:byte = e[12]:ubyte ^ h[12]:ubyte;
              e[13]:byte = e[13]:ubyte ^ h[13]:ubyte;
              e[14]:byte = e[14]:ubyte ^ h[14]:ubyte;
              e[15]:byte = e[15]:ubyte ^ h[15]:ubyte;
              e = e + 16;
              c = c + 16;
              h = d;
              l = l - 16;
              if (l > 15) continue L_la;
            }
            goto B_ha;
            label B_ia:
            h = f;
            loop L_ma {
              d = c;
              f_p(d, e, m);
              e[0]:int = e[0]:int ^ h[0]:int;
              e[1]:int = e[1]:int ^ h[1]:int;
              e[2]:int = e[2]:int ^ h[2]:int;
              e[3]:int = e[3]:int ^ h[3]:int;
              e = e + 16;
              c = c + 16;
              h = d;
              l = l - 16;
              if (l > 15) continue L_ma;
            }
            label B_ha:
            f[0]:long@1 = d[0];
            f[8]:long@1 = d[8];
            goto B_fa;
          }
          if ((c | f) & 3) {
            if (l >= 16) goto B_oa;
            e = c;
            goto B_ea;
          }
          if (l >= 16) goto B_na;
          e = c;
          goto B_ea;
          label B_oa:
          e = c;
          loop L_qa {
            f_p(c, i, m);
            d = c[0]:ubyte;
            e[0]:byte = f[0]:ubyte ^ i[0]:ubyte;
            f[0]:byte = d;
            d = c[1]:ubyte;
            e[1]:byte = f[1]:ubyte ^ i[1]:ubyte;
            f[1]:byte = d;
            d = c[2]:ubyte;
            e[2]:byte = f[2]:ubyte ^ i[2]:ubyte;
            f[2]:byte = d;
            d = c[3]:ubyte;
            e[3]:byte = f[3]:ubyte ^ i[3]:ubyte;
            f[3]:byte = d;
            d = c[4]:ubyte;
            e[4]:byte = f[4]:ubyte ^ i[4]:ubyte;
            f[4]:byte = d;
            d = c[5]:ubyte;
            e[5]:byte = f[5]:ubyte ^ i[5]:ubyte;
            f[5]:byte = d;
            d = c[6]:ubyte;
            e[6]:byte = f[6]:ubyte ^ i[6]:ubyte;
            f[6]:byte = d;
            d = c[7]:ubyte;
            e[7]:byte = f[7]:ubyte ^ i[7]:ubyte;
            f[7]:byte = d;
            d = c[8]:ubyte;
            e[8]:byte = f[8]:ubyte ^ i[8]:ubyte;
            f[8]:byte = d;
            d = c[9]:ubyte;
            e[9]:byte = f[9]:ubyte ^ i[9]:ubyte;
            f[9]:byte = d;
            d = c[10]:ubyte;
            e[10]:byte = f[10]:ubyte ^ i[10]:ubyte;
            f[10]:byte = d;
            d = c[11]:ubyte;
            e[11]:byte = f[11]:ubyte ^ i[11]:ubyte;
            f[11]:byte = d;
            d = c[12]:ubyte;
            e[12]:byte = f[12]:ubyte ^ i[12]:ubyte;
            f[12]:byte = d;
            d = c[13]:ubyte;
            e[13]:byte = f[13]:ubyte ^ i[13]:ubyte;
            f[13]:byte = d;
            d = c[14]:ubyte;
            e[14]:byte = f[14]:ubyte ^ i[14]:ubyte;
            f[14]:byte = d;
            d = c[15]:ubyte;
            e[15]:byte = f[15]:ubyte ^ i[15]:ubyte;
            f[15]:byte = d;
            e = e + 16;
            c = c + 16;
            l = l - 16;
            if (l > 15) continue L_qa;
          }
          goto B_fa;
          label B_na:
          e = c;
          loop L_ra {
            f_p(c, i, m);
            d = c[0]:int;
            e[0]:int = f[0]:int ^ i[0]:int;
            f[0]:int = d;
            d = c[1]:int;
            e[1]:int = f[1]:int ^ i[1]:int;
            f[1]:int = d;
            d = c[2]:int;
            e[2]:int = f[2]:int ^ i[2]:int;
            f[2]:int = d;
            d = c[3]:int;
            e[3]:int = f[3]:int ^ i[3]:int;
            f[3]:int = d;
            e = e + 16;
            c = c + 16;
            l = l - 16;
            if (l > 15) continue L_ra;
          }
          label B_fa:
          if (eqz(l)) goto B_da;
          label B_ea:
          f_p(c, i, m);
          h = 0;
          d = 15 - l;
          g = select_if(d, 0, d <= 15) + 2;
          if (l != 1) {
            p = l & -2;
            m = 0;
            loop L_ta {
              d = (c + h)[0]:ubyte;
              (e + h)[0]:byte = (j = f + h)[0]:ubyte ^ (h + i)[0]:ubyte;
              j[0]:byte = d;
              j = (c + (d = h | 1))[0]:ubyte;
              (d + e)[0]:byte = (o = d + f)[0]:ubyte ^ (d + i)[0]:ubyte;
              o[0]:byte = j;
              j = g;
              g = j + 2;
              h = h + 2;
              m = m + 2;
              if (m != p) continue L_ta;
            }
            m = j + 1;
          }
          if (
            if (l & 1) {
              d = (c + h)[0]:ubyte;
              (e + h)[0]:byte = (e = f + h)[0]:ubyte ^ (h + i)[0]:ubyte;
              e[0]:byte = d;
              m = g;
              h;
            } else {
              d
            } >
            14) goto B_da;
          d = m - (e = l) & 3;
          if (d) {
            h = 0;
            loop L_wa {
              (e + f)[0]:byte = (c + e)[0]:ubyte;
              e = e + 1;
              h = h + 1;
              if (h != d) continue L_wa;
            }
          }
          if (l - m > -4) goto B_da;
          loop L_xa {
            (e + f)[0]:byte = (c + e)[0]:ubyte;
            (f + (d = e + 1))[0]:byte = (c + d)[0]:ubyte;
            (f + (d = e + 2))[0]:byte = (c + d)[0]:ubyte;
            (f + (d = e + 3))[0]:byte = (c + d)[0]:ubyte;
            e = e + 4;
            if (e != m) continue L_xa;
          }
          label B_da:
          g_a = i + 16;
          a = f_q(a,
                  n,
                  h = {
                        b -
                        if ((h = (a = ((c = b + n) - 1)[0]:ubyte) - 1) < 16) {
                          d = a;
                          loop L_ab {
                            b;
                            if (a != (c - d)[0]:ubyte) goto B_ya;
                            if ((h = (d = h) - 1) <= 15) continue L_ab;
                          }
                          a;
                        } else {
                          0
                        }
                        label B_ya:
                      });
          f_ea(n);
          14464[0]:int = (b = malloc(b));
          (f_q(b, a, h) + h)[0]:byte = 0;
          goto B_a;
        }
        d = 61;
        goto B_t;
        label B_u:
        d = 43;
        label B_t:
        h[0]:byte = d;
        label B_s:
        h = h + 1;
        continue L_r;
      }
      unreachable;
    }
    d = 61;
    goto B_d;
    label B_e:
    d = 43;
    label B_d:
    h[0]:byte = d;
    label B_c:
    h = h + 1;
    continue L_b;
  }
  unreachable;
  label B_a:
  g_a = k + 336;
  return h;
}

function f_k(a:int, b:int):int {
  var c:int;
  var d:int;
  var f:int;
  var i:int;
  var k:int;
  var m:int;
  var n:int;
  var g:int;
  var l:int;
  var j:int = malloc(b);
  var e:int = 3;
  loop L_b {
    g = c;
    var h:int = select_if(d, b, b < d);
    l = -1;
    loop L_d {
      if (d == h) goto B_c;
      let t0 = a + d;
      d = c = d + 1;
      i = t0[0]:ubyte;
      f = (i + 1024)[0]:ubyte;
      if (f == 253) continue L_d;
    }
    if (f == 255) goto B_a;
    h = select_if(c, b, b < c);
    let t2, t3 = select_if(0, f, d = i == 61), e - d;
    loop L_e {
      if (c == h) goto B_c;
      let t1 = a + c;
      c = d = c + 1;
      if ((e = ((k = t1[0]:ubyte) + 1024)[0]:ubyte) == 253) continue L_e;
    }
    if (e == 255) goto B_a;
    h = select_if(d, b, b < d);
    k = select_if(0, e, c = k == 61);
    i = t3 - c;
    loop L_f {
      if (d == h) goto B_c;
      let t4 = a + d;
      d = c = d + 1;
      if ((e = ((m = t4[0]:ubyte) + 1024)[0]:ubyte) == 253) continue L_f;
    }
    if (e == 255) goto B_a;
    h = t2 << 12 | k << 6;
    m = h | (k = select_if(0, e, d = m == 61));
    e = select_if(c, b, b < c);
    let t6 = i - d;
    loop L_g {
      if (c == e) goto B_c;
      let t5 = a + c;
      c = d = c + 1;
      if ((f = ((n = t5[0]:ubyte) + 1024)[0]:ubyte) == 253) continue L_g;
    }
    if (f == 255) goto B_a;
    (g + j)[0]:byte = h >> 10;
    c = g + 1;
    e = t6 - (l = n == 61);
    if (e < 2) continue L_b;
    (c + j)[0]:byte = m >> 2;
    c = g + 2;
    if (e == 2) continue L_b;
    (c + j)[0]:byte = k << 6 | select_if(0, f, l);
    c = g + 3;
    continue L_b;
    label B_c:
  }
  let t7 = f_q(a, j, g);
  f_ea(j);
  (t7 + g)[0]:byte = 0;
  l = g;
  label B_a:
  return l;
}

export function getoutputPtr():int {
  return 14464[0]:int
}

export function free_buff(a:int) {
  if (a) { f_ea(a) }
}

export function main(a:int, b:int):int {
  return 0
}

function f_o(a:int, b:int_ptr@1, c:{ a:int, b:int, c:int, d:int }) {
  var d:int;
  var g:int;
  var f:int;
  var h:int = c.d ^
              (((d = a[12]:int@1) << 24 | (d & 65280) << 8) |
               ((d >> 8 & 65280) | d >> 24));
  var i:int = c.c ^
              (((d = a[8]:int@1) << 24 | (d & 65280) << 8) |
               ((d >> 8 & 65280) | d >> 24));
  var j:int = c.b ^
              (((d = a[4]:int@1) << 24 | (d & 65280) << 8) |
               ((d >> 8 & 65280) | d >> 24));
  var e:int = c.a ^
              (((a = a[0]:int@1) << 24 | (a & 65280) << 8) |
               ((a >> 8 & 65280) | a >> 24));
  a = c;
  var l:int = a[60]:int >> 1;
  var k:int = l;
  loop L_a {
    d = 
      a[7]:int ^
      ((((i & 255) << 2) + 2336)[0]:int ^
       (((j >> 6 & 1020) + 1312)[0]:int ^
        (((e >> 14 & 1020) + 4384)[0]:int ^ ((h >> 22 & 1020) + 3360)[0]:int)));
    f = 
      a[6]:int ^
      ((((j & 255) << 2) + 2336)[0]:int ^
       (((e >> 6 & 1020) + 1312)[0]:int ^
        (((h >> 14 & 1020) + 4384)[0]:int ^ ((i >> 22 & 1020) + 3360)[0]:int)));
    g = 
      a[5]:int ^
      ((((e & 255) << 2) + 2336)[0]:int ^
       (((h >> 6 & 1020) + 1312)[0]:int ^
        (((i >> 14 & 1020) + 4384)[0]:int ^ ((j >> 22 & 1020) + 3360)[0]:int)));
    e = 
      a[4]:int ^
      ((((h & 255) << 2) + 2336)[0]:int ^
       (((i >> 6 & 1020) + 1312)[0]:int ^
        (((j >> 14 & 1020) + 4384)[0]:int ^ ((e >> 22 & 1020) + 3360)[0]:int)));
    k = k - 1;
    if (k) {
      h = 
        a[11]:int ^
        ((((f & 255) << 2) + 2336)[0]:int ^
         (((g >> 6 & 1020) + 1312)[0]:int ^
          (((e >> 14 & 1020) + 4384)[0]:int ^ ((d >> 22 & 1020) + 3360)[0]:int)));
      i = 
        a[10]:int ^
        ((((g & 255) << 2) + 2336)[0]:int ^
         (((e >> 6 & 1020) + 1312)[0]:int ^
          (((d >> 14 & 1020) + 4384)[0]:int ^ ((f >> 22 & 1020) + 3360)[0]:int)));
      j = 
        a[9]:int ^
        ((((e & 255) << 2) + 2336)[0]:int ^
         (((d >> 6 & 1020) + 1312)[0]:int ^
          (((f >> 14 & 1020) + 4384)[0]:int ^ ((g >> 22 & 1020) + 3360)[0]:int)));
      e = 
        a[8]:int ^
        ((((d & 255) << 2) + 2336)[0]:int ^
         (((f >> 6 & 1020) + 1312)[0]:int ^
          (((g >> 14 & 1020) + 4384)[0]:int ^ ((e >> 22 & 1020) + 3360)[0]:int)));
      a = a + 32;
      continue L_a;
    }
  }
  b[0] =
    ((c = (a = c + (l << 5))[0]:int ^
          ((((d & 255) << 2) + 4384)[0]:ubyte |
           ((((g >> 14 & 1020) + 2336)[2]:ubyte << 16 |
             ((e >> 22 & 1020) + 1312)[3]:ubyte << 24) |
            ((f >> 6 & 1020) + 3360)[1]:ubyte << 8))) <<
     24 |
     (c & 65280) << 8) |
    ((c >> 8 & 65280) | c >> 24);
  b[4] =
    ((c = a[1]:int ^
          ((((e & 255) << 2) + 4384)[0]:ubyte |
           ((((f >> 14 & 1020) + 2336)[2]:ubyte << 16 |
             ((g >> 22 & 1020) + 1312)[3]:ubyte << 24) |
            ((d >> 6 & 1020) + 3360)[1]:ubyte << 8))) <<
     24 |
     (c & 65280) << 8) |
    ((c >> 8 & 65280) | c >> 24);
  b[8] =
    ((c = a[2]:int ^
          ((((g & 255) << 2) + 4384)[0]:ubyte |
           ((((d >> 14 & 1020) + 2336)[2]:ubyte << 16 |
             ((f >> 22 & 1020) + 1312)[3]:ubyte << 24) |
            ((e >> 6 & 1020) + 3360)[1]:ubyte << 8))) <<
     24 |
     (c & 65280) << 8) |
    ((c >> 8 & 65280) | c >> 24);
  b[12] =
    ((a = a[3]:int ^
          ((((f & 255) << 2) + 4384)[0]:ubyte |
           ((((e >> 14 & 1020) + 2336)[2]:ubyte << 16 |
             ((d >> 22 & 1020) + 1312)[3]:ubyte << 24) |
            ((g >> 6 & 1020) + 3360)[1]:ubyte << 8))) <<
     24 |
     (a & 65280) << 8) |
    ((a >> 8 & 65280) | a >> 24);
}

function f_p(a:int, b:int_ptr@1, c:{ a:int, b:int, c:int, d:int }) {
  var d:int;
  var m:int;
  var g:int;
  var f:int;
  var h:int = c.d ^
              (((d = a[12]:int@1) << 24 | (d & 65280) << 8) |
               ((d >> 8 & 65280) | d >> 24));
  var i:int = c.c ^
              (((d = a[8]:int@1) << 24 | (d & 65280) << 8) |
               ((d >> 8 & 65280) | d >> 24));
  var j:int = c.b ^
              (((d = a[4]:int@1) << 24 | (d & 65280) << 8) |
               ((d >> 8 & 65280) | d >> 24));
  var e:int = c.a ^
              (((a = a[0]:int@1) << 24 | (a & 65280) << 8) |
               ((a >> 8 & 65280) | a >> 24));
  a = c;
  var l:int = a[60]:int >> 1;
  var k:int = l;
  loop L_a {
    d = a[7]:int ^
        ((((e & 255) << 2) + 8528)[0]:int ^
         (((j >> 6 & 1020) + 7504)[0]:int ^
          (((m = 6480) + (i >> 14 & 1020))[0]:int ^
           ((h >> 22 & 1020) + 5456)[0]:int)));
    f = 
      a[6]:int ^
      ((((h & 255) << 2) + 8528)[0]:int ^
       (((e >> 6 & 1020) + 7504)[0]:int ^
        (((j >> 14 & 1020) + 6480)[0]:int ^ ((i >> 22 & 1020) + 5456)[0]:int)));
    g = 
      a[5]:int ^
      ((((i & 255) << 2) + 8528)[0]:int ^
       (((h >> 6 & 1020) + 7504)[0]:int ^
        (((e >> 14 & 1020) + 6480)[0]:int ^ ((j >> 22 & 1020) + 5456)[0]:int)));
    e = 
      a[4]:int ^
      ((((j & 255) << 2) + 8528)[0]:int ^
       (((i >> 6 & 1020) + 7504)[0]:int ^
        (((h >> 14 & 1020) + 6480)[0]:int ^ ((e >> 22 & 1020) + 5456)[0]:int)));
    k = k - 1;
    if (k) {
      h = 
        a[11]:int ^
        ((((e & 255) << 2) + 8528)[0]:int ^
         (((g >> 6 & 1020) + 7504)[0]:int ^
          (((f >> 14 & 1020) + 6480)[0]:int ^ ((d >> 22 & 1020) + 5456)[0]:int)));
      i = 
        a[10]:int ^
        ((((d & 255) << 2) + 8528)[0]:int ^
         (((e >> 6 & 1020) + 7504)[0]:int ^
          (((g >> 14 & 1020) + 6480)[0]:int ^ ((f >> 22 & 1020) + 5456)[0]:int)));
      j = 
        a[9]:int ^
        ((((f & 255) << 2) + 8528)[0]:int ^
         (((d >> 6 & 1020) + 7504)[0]:int ^
          (((e >> 14 & 1020) + 6480)[0]:int ^ ((g >> 22 & 1020) + 5456)[0]:int)));
      e = 
        a[8]:int ^
        ((((g & 255) << 2) + 8528)[0]:int ^
         (((f >> 6 & 1020) + 7504)[0]:int ^
          (((d >> 14 & 1020) + 6480)[0]:int ^ ((e >> 22 & 1020) + 5456)[0]:int)));
      a = a + 32;
      continue L_a;
    }
  }
  b[0] =
    ((c = (a = c + (l << 5))[0]:int ^
          (((g & 255) + 9552)[0]:ubyte |
           ((((d >> 16 & 255) + 9552)[0]:ubyte << 16 |
             ((e >> 24) + 9552)[0]:ubyte << 24) |
            ((f >> 8 & 255) + 9552)[0]:ubyte << 8))) <<
     24 |
     (c & 65280) << 8) |
    ((c >> 8 & 65280) | c >> 24);
  b[4] =
    ((c = a[1]:int ^
          (((f & 255) + 9552)[0]:ubyte |
           ((((e >> 16 & 255) + 9552)[0]:ubyte << 16 |
             ((g >> 24) + 9552)[0]:ubyte << 24) |
            ((d >> 8 & 255) + 9552)[0]:ubyte << 8))) <<
     24 |
     (c & 65280) << 8) |
    ((c >> 8 & 65280) | c >> 24);
  b[8] =
    ((c = a[2]:int ^
          (((d & 255) + 9552)[0]:ubyte |
           ((((g >> 16 & 255) + 9552)[0]:ubyte << 16 |
             ((f >> 24) + 9552)[0]:ubyte << 24) |
            ((e >> 8 & 255) + 9552)[0]:ubyte << 8))) <<
     24 |
     (c & 65280) << 8) |
    ((c >> 8 & 65280) | c >> 24);
  b[12] =
    ((a = a[3]:int ^
          (((e & 255) + 9552)[0]:ubyte |
           ((((f >> 16 & 255) + 9552)[0]:ubyte << 16 |
             ((d >> 24) + 9552)[0]:ubyte << 24) |
            ((g >> 8 & 255) + 9552)[0]:ubyte << 8))) <<
     24 |
     (a & 65280) << 8) |
    ((a >> 8 & 65280) | a >> 24);
}

function f_q(a:int, b:int, c:int):int {
  var f:int;
  var e:int;
  if (c >= 512) {
    env_emscripten_memcpy_js(a, b, c);
    return a;
  }
  var d:int = a + c;
  if (eqz((a ^ b) & 3)) {
    if (eqz(a & 3)) {
      c = a;
      goto B_d;
    }
    if (eqz(c)) {
      c = a;
      goto B_d;
    }
    c = a;
    loop L_g {
      c[0]:byte = b[0]:ubyte;
      b = b + 1;
      c = c + 1;
      if (eqz(c & 3)) goto B_d;
      if (c < d) continue L_g;
    }
    label B_d:
    e = d & -4;
    if (e < 64) goto B_h;
    if (c > (f = e + -64)) goto B_h;
    loop L_i {
      c[0]:int = b[0]:int;
      c[1]:int = b[1]:int;
      c[2]:int = b[2]:int;
      c[3]:int = b[3]:int;
      c[4]:int = b[4]:int;
      c[5]:int = b[5]:int;
      c[6]:int = b[6]:int;
      c[7]:int = b[7]:int;
      c[8]:int = b[8]:int;
      c[9]:int = b[9]:int;
      c[10]:int = b[10]:int;
      c[11]:int = b[11]:int;
      c[12]:int = b[12]:int;
      c[13]:int = b[13]:int;
      c[14]:int = b[14]:int;
      c[15]:int = b[15]:int;
      b = b - -64;
      c = c - -64;
      if (c <= f) continue L_i;
    }
    label B_h:
    if (c >= e) goto B_b;
    loop L_j {
      c[0]:int = b[0]:int;
      b = b + 4;
      c = c + 4;
      if (c < e) continue L_j;
    }
    goto B_b;
  }
  if (d < 4) {
    c = a;
    goto B_b;
  }
  if (a > (e = d - 4)) {
    c = a;
    goto B_b;
  }
  c = a;
  loop L_m {
    c[0]:byte = b[0]:ubyte;
    c[1]:byte = b[1]:ubyte;
    c[2]:byte = b[2]:ubyte;
    c[3]:byte = b[3]:ubyte;
    b = b + 4;
    c = c + 4;
    if (c <= e) continue L_m;
  }
  label B_b:
  if (c < d) {
    loop L_o {
      c[0]:byte = b[0]:ubyte;
      b = b + 1;
      c = c + 1;
      if (c != d) continue L_o;
    }
  }
  return a;
}

function f_r(a:int, b:int) {
  if (eqz(b)) goto B_a;
  a[0]:byte = 0;
  var c:int = a + b;
  (c - 1)[0]:byte = 0;
  if (b < 3) goto B_a;
  a[2]:byte = 0;
  a[1]:byte = 0;
  (c - 3)[0]:byte = 0;
  (c - 2)[0]:byte = 0;
  if (b < 7) goto B_a;
  a[3]:byte = 0;
  (c - 4)[0]:byte = 0;
  if (b < 9) goto B_a;
  a = a + (c = 0 - a & 3);
  a[0]:int = 0;
  b = a + (c = b - c & -4);
  (b - 4)[0]:int = 0;
  if (c < 9) goto B_a;
  a[2]:int = 0;
  a[1]:int = 0;
  (b - 8)[0]:int = 0;
  (b - 12)[0]:int = 0;
  if (c < 25) goto B_a;
  a[6]:int = 0;
  a[5]:int = 0;
  a[4]:int = 0;
  a[3]:int = 0;
  (b - 16)[0]:int = 0;
  (b - 20)[0]:int = 0;
  (b - 24)[0]:int = 0;
  (b - 28)[0]:int = 0;
  b = c - (c = (a & 4) | 24);
  if (b < 32) goto B_a;
  a = a + c;
  loop L_b {
    a[3]:long = 0L;
    a[2]:long = 0L;
    a[1]:long = 0L;
    a[0]:long = 0L;
    a = a + 32;
    b = b - 32;
    if (b > 31) continue L_b;
  }
  label B_a:
}

export function fflush(a:int):int {
  var b:int;
  var d:int;
  if (eqz(a)) {
    a = d_n[0]:int;
    if (a) { b = fflush(a) }
    a = d_i[0]:int;
    if (a) { b = fflush(a) | b }
    a = 14488[0]:int;
    if (a) {
      loop L_e {
        a[19]:int;
        if (a[5]:int != a[7]:int) { b = fflush(a) | b }
        a = a[14]:int;
        if (a) continue L_e;
      }
    }
    return b;
  }
  var c:int = a[19]:int < 0;
  if (a[5]:int == a[7]:int) goto B_h;
  call_indirect(a, 0, 0, a[9]:int);
  if (a[5]:int) goto B_h;
  b = -1;
  goto B_g;
  label B_h:
  b = a[1]:int;
  if (b != (d = a[2]:int)) {
    call_indirect(a, i64_extend_i32_s(b - d), 1, a[10]:int)
  }
  b = 0;
  a[7]:int = 0;
  a[2]:long = 0L;
  a[1]:long@4 = 0L;
  if (c) goto B_g;
  label B_g:
  return b;
}

function f(a:int, b:long, c:int):long {
  let t0 = a[15]:int;
  g_a = a = g_a - 16;
  c = wasi_snapshot_preview1_fd_seek(t0,
                                     i32_wrap_i64(b),
                                     i32_wrap_i64(b >> 32L),
                                     c & 255,
                                     a + 8);
  c = if (c) {
        14480[0]:int = c;
        -1;
      } else {
        0
      }
  b = a[1]:long;
  g_a = a + 16;
  return select_if(-1L, b, c);
}

function f_u(a:int, b:{ a:int, b:int }, c:int):int {
  var e:{ a:int, b:int }
  var g:int;
  var i:int;
  var j:int;
  var d:int_ptr = g_a - 32;
  g_a = d;
  d[4] = (e = a[7]:int);
  var f:int = a[5]:int;
  d[7] = c;
  d[6] = b;
  d[5] = (b = f - e);
  f = b + c;
  var h:int = 2;
  let t0 = 
    {
      e = wasi_snapshot_preview1_fd_write(a[15]:int, b = d + 16, 2, d + 12);
      if (if (e) {
            14480[0]:int = e;
            -1;
          } else {
            0
          }) {
        e = b;
        goto B_d;
      }
      loop L_g {
        if (f == (g = d[3])) goto B_c;
        if (g < 0) {
          e = b;
          goto B_b;
        }
        e = b + ((j = g > (i = b.b)) << 3);
        e.a = (i = g - select_if(i, 0, j)) + e.a;
        b = b + select_if(12, 4, j);
        b.a = b.a - i;
        f = f - g;
        g = 
          wasi_snapshot_preview1_fd_write(a[15]:int, b = e, h = h - j, d + 12);
        if (eqz(if (g) {
                  14480[0]:int = g;
                  -1;
                } else {
                  0
                })) continue L_g;
      }
      label B_d:
      if (f != -1) goto B_b;
      label B_c:
      a[7]:int = (b = a[11]:int);
      a[5]:int = b;
      a[4]:int = b + a[12]:int;
      c;
      goto B_a;
      label B_b:
      a[7]:int = 0;
      a[2]:long = 0L;
      a[0]:int = a[0]:int | 32;
      0;
      if (h == 2) goto B_a;
      c - e.b;
      label B_a:
    }
  g_a = d + 32;
  return t0;
}

function f_v(a:int_ptr):int {
  return wasi_snapshot_preview1_fd_close(a[15])
}

function f_w():int {
  var a:int;
  14384[0]:int = (a = 14384[0]:int) - 1 | a;
  a = d_i[2]:int;
  if (a & 8) {
    d_i[2]:int = a | 32;
    return -1;
  }
  14316[0]:long@4 = 0L;
  14340[0]:int = (a = d_k[2]:int);
  14332[0]:int = a;
  14328[0]:int = a + d_k[3]:int;
  return 0;
}

function f_x(a:int, b:int):int {
  var c:int;
  var d:int;
  var e:int;
  if (b >
      if (c = 14328[0]:int) {
        c
      } else {
        if (f_w()) goto B_a;
        14328[0]:int;
      } -
      (d = 14332[0]:int)) {
    return call_indirect(14312, a, b, d_k[0]:int)
  }
  if (d_m[1]:int < 0) goto B_e;
  if (eqz(b)) goto B_e;
  c = b;
  loop L_f {
    e = a + c;
    if ((e - 1)[0]:ubyte != 10) {
      c = c - 1;
      if (c) continue L_f;
      goto B_e;
    }
  }
  d = call_indirect(14312, a, c, d_k[0]:int);
  if (d < c) goto B_a;
  b = b - c;
  d = 14332[0]:int;
  goto B_d;
  label B_e:
  e = a;
  c = 0;
  label B_d:
  f_q(d, e, b);
  14332[0]:int = 14332[0]:int + b;
  d = b + c;
  label B_a:
  return d;
}

export function ntohs(a:int):int {
  return (a << 8 | a >> 8) & 65535
}

function f_z(a:int) {
  var b:int;
  var c:int;
  d_m[0]:int;
  if (
    {
      a = 
        {
          c = a;
          if (eqz(c & 3)) goto B_e;
          0;
          if (eqz(a[0]:ubyte)) goto B_c;
          loop L_f {
            a = a + 1;
            if (eqz(a & 3)) goto B_e;
            if (a[0]:ubyte) continue L_f;
          }
          goto B_d;
          label B_e:
          loop L_g {
            b = a;
            a = b + 4;
            var d:int = b[0]:int;
            if (eqz(((d ^ -1) & d - 16843009) & -2139062144)) continue L_g;
          }
          loop L_h {
            a = b;
            b = a + 1;
            if (a[0]:ubyte) continue L_h;
          }
          label B_d:
          a - c;
          label B_c:
        }
      a;
      if (a ==
          (b = {
                 if (d_m[0]:int < 0) {
                   f_x(c, a);
                   goto B_i;
                 }
                 f_x(c, a);
                 label B_i:
               })) goto B_b;
      b;
      label B_b:
    } !=
    a) goto B_a;
  if (d_m[1]:int == 10) goto B_k;
  a = 14332[0]:int;
  if (a == 14328[0]:int) goto B_k;
  14332[0]:int = a + 1;
  a[0]:byte = 10;
  goto B_a;
  label B_k:
  a = g_a - 16;
  g_a = a;
  a[15]:byte = 10;
  b = 14328[0]:int;
  if (if (b) {
        b
      } else {
        if (f_w()) goto B_l;
        14328[0]:int;
      } ==
      (b = 14332[0]:int)) goto B_m;
  if (d_m[1]:int == 10) goto B_m;
  14332[0]:int = b + 1;
  b[0]:byte = 10;
  goto B_l;
  label B_m:
  if (call_indirect(14312, a + 15, 1, d_k[0]:int) != 1) goto B_l;
  a[15]:ubyte;
  label B_l:
  g_a = a + 16;
  label B_a:
}

function f_aa(a:int):int {
  return 0
}

function f_ba(a:int, b:long, c:int):long {
  return 0L
}

function f_ca(a:int):int {
  var c:int;
  var b:int = d_n[1]:int;
  a = b + (c = a + 7 & -8);
  if (eqz(select_if(c, 0, a <= b))) {
    if (a <= memory_size() << 16) goto B_a;
    if (env_emscripten_resize_heap(a)) goto B_a;
  }
  14480[0]:int = 48;
  return -1;
  label B_a:
  d_n[1]:int = a;
  return b;
}

export function malloc(a:int):int {
  var f:int;
  var d:{ a:int, b:int, c:int, d:int, e:int, f:int, g:int, h:int }
  var c:int;
  var h:int_ptr;
  var e:int;
  var i:int_ptr;
  var b:int;
  var g:int_ptr;
  var j:int_ptr;
  var l:int;
  var k:int = g_a - 16;
  g_a = k;
  if (a <= 244) {
    g = 15544[0]:int;
    b = g >> (a = (f = select_if(16, a + 11 & 504, a < 11)) >> 3);
    if (b & 3) {
      c = ((b ^ -1) & 1) + a;
      b = c << 3;
      a = b + 15584;
      if (a == (d = (b = (b + 15592)[0]:int)[2]:int)) {
        15544[0]:int = g & -2 << c;
        goto B_l;
      }
      d.d = a;
      a[2]:int = d;
      label B_l:
      a = b + 8;
      b[1]:int = (c = c << 3) | 3;
      b = b + c;
      b[1]:int = b[1]:int | 1;
      goto B_a;
    }
    if (f <= (h = 15552[0]:int)) goto B_i;
    if (b) {
      c = 2 << a;
      b = ctz((c | 0 - c) & b << a);
      a = b << 3;
      c = a + 15584;
      if (c == (d = (a = (a + 15592)[0]:int)[2]:int)) {
        15544[0]:int = (g = g & -2 << b);
        goto B_o;
      }
      d.d = c;
      c[2]:int = d;
      label B_o:
      a[1]:int = f | 3;
      e = a + f;
      e[1]:int = (d = (b = b << 3) - f) | 1;
      (a + b)[0]:int = d;
      if (h) {
        b = (h & -8) + 15584;
        c = 15564[0]:int;
        f = {
              if (eqz(g & (f = 1 << (h >> 3)))) {
                15544[0]:int = f | g;
                b;
                goto B_r;
              }
              b[2]:int;
              label B_r:
            }
        b[2]:int = c;
        f[3]:int = c;
        c[3]:int = b;
        c[2]:int = f;
      }
      a = a + 8;
      15564[0]:int = e;
      15552[0]:int = d;
      goto B_a;
    }
    l = 15548[0]:int;
    if (eqz(l)) goto B_i;
    c = ((ctz(l) << 2) + 15848)[0]:int;
    e = (c[1]:int & -8) - f;
    b = c;
    loop L_t {
      a = b[4]:int;
      if (eqz(a)) {
        a = b[5]:int;
        if (eqz(a)) goto B_u;
      }
      b = (a[1]:int & -8) - f;
      e = select_if(b, e, b = b < e);
      c = select_if(a, c, b);
      b = a;
      continue L_t;
      label B_u:
    }
    j = c[6]:int;
    if (c != (d = c[3]:int)) {
      15560[0]:int;
      a = c[2]:int;
      a[3]:int = d;
      d.c = a;
      goto B_b;
    }
    b = c + 20;
    a = b[0]:int;
    if (eqz(a)) {
      a = c[4]:int;
      if (eqz(a)) goto B_h;
      b = c + 16;
    }
    loop L_y {
      i = b;
      d = a;
      b = d + 20;
      a = b[0]:int;
      if (a) continue L_y;
      b = d + 16;
      a = d.e;
      if (a) continue L_y;
    }
    i[0] = 0;
    goto B_b;
  }
  f = -1;
  if (a > -65) goto B_i;
  a = a + 11;
  f = a & -8;
  i = 15548[0]:int;
  if (eqz(i)) goto B_i;
  e = 0 - f;
  h = {
        0;
        if (f < 256) goto B_ca;
        31;
        if (f > 16777215) goto B_ca;
        (f >> 38 - (a = clz(a >> 8)) & 1) - (a << 1) + 62;
        label B_ca:
      }
  b = ((h << 2) + 15848)[0]:int;
  if (eqz(b)) {
    a = 0;
    goto B_ba;
  }
  a = 0;
  c = f << select_if(25 - (h >> 1), 0, h != 31);
  loop L_ea {
    g = (b[1]:int & -8) - f;
    if (g >= e) goto B_fa;
    d = b;
    e = g;
    if (e) goto B_fa;
    e = 0;
    a = b;
    goto B_aa;
    label B_fa:
    a = 
      select_if(
        select_if(a, g = b[5]:int, g == (b = (b + (c >> 29 & 4))[4]:int)),
        a,
        g);
    c = c << 1;
    if (b) continue L_ea;
  }
  label B_ba:
  if (eqz(a | d)) {
    d = 0;
    a = 2 << h;
    a = (a | 0 - a) & i;
    if (eqz(a)) goto B_i;
    a = ((ctz(a) << 2) + 15848)[0]:int;
  }
  if (eqz(a)) goto B_z;
  label B_aa:
  loop L_ha {
    c = (a[1]:int & -8) - f;
    b = c < e;
    e = select_if(c, e, b);
    d = select_if(a, d, b);
    b = a[4]:int;
    a = if (b) { b } else { a[5]:int }
    if (a) continue L_ha;
  }
  label B_z:
  if (eqz(d)) goto B_i;
  if (e >= 15552[0]:int - f) goto B_i;
  h = d.g;
  if (d != (c = d.d)) {
    15560[0]:int;
    a = d.c;
    a[3]:int = c;
    c[2]:int = a;
    goto B_c;
  }
  b = d + 20;
  a = b[0]:int;
  if (eqz(a)) {
    a = d.e;
    if (eqz(a)) goto B_g;
    b = d + 16;
  }
  loop L_la {
    g = b;
    c = a;
    b = c + 20;
    a = b[0]:int;
    if (a) continue L_la;
    b = c + 16;
    a = c[4]:int;
    if (a) continue L_la;
  }
  g[0] = 0;
  goto B_c;
  label B_i:
  if (f <= (d = 15552[0]:int)) {
    a = 15564[0]:int;
    b = d - f;
    if (b >= 16) {
      c = a + f;
      c[1]:int = b | 1;
      (a + d)[0]:int = b;
      a[1]:int = f | 3;
      goto B_na;
    }
    a[1]:int = d | 3;
    b = a + d;
    b[1]:int = b[1]:int | 1;
    c = 0;
    b = 0;
    label B_na:
    15552[0]:int = b;
    15564[0]:int = c;
    a = a + 8;
    goto B_a;
  }
  if (f < (c = 15556[0]:int)) {
    15556[0]:int = (b = c - f);
    15568[0]:int = (c = (a = 15568[0]:int) + f);
    c[1]:int = b | 1;
    a[1]:int = f | 3;
    a = a + 8;
    goto B_a;
  }
  a = 0;
  e = f + 47;
  g = e +
      (b = {
             if (16016[0]:int) {
               16024[0]:int;
               goto B_qa;
             }
             16028[0]:long@4 = -1L;
             16020[0]:long@4 = 17592186048512L;
             16016[0]:int = (k + 12 & -16) ^ 1431655768;
             16036[0]:int = 0;
             15988[0]:int = 0;
             4096;
             label B_qa:
           });
  b = g & (i = 0 - b);
  if (b <= f) goto B_a;
  d = 15984[0]:int;
  if (d) {
    h = 15976[0]:int;
    j = h + b;
    if (j <= h) goto B_a;
    if (d < j) goto B_a;
  }
  if (eqz(15988[0]:ubyte & 4)) {
    d = 15568[0]:int;
    if (d) {
      a = 15992;
      loop L_ab {
        if (d >= (h = a[0]:int)) { if (h + a[1]:int > d) goto B_ya }
        a = a[2]:int;
        if (a) continue L_ab;
      }
    }
    c = f_ca(0);
    if (c == -1) goto B_va;
    g = b;
    a = 16020[0]:int;
    d = a - 1;
    if (d & c) { g = b - c + (c + d & 0 - a) }
    if (f >= g) goto B_va;
    a = 15984[0]:int;
    if (a) {
      d = 15976[0]:int;
      i = d + g;
      if (i <= d) goto B_va;
      if (a < i) goto B_va;
    }
    a = f_ca(g);
    if (a != c) goto B_xa;
    goto B_ta;
    label B_ya:
    g = g - c & i;
    c = f_ca(g);
    if (c == a[0]:int + a[1]:int) goto B_wa;
    a = c;
    label B_xa:
    if (a == -1) goto B_va;
    if (f + 48 <= g) {
      c = a;
      goto B_ta;
    }
    c = 16024[0]:int;
    c = c + e - g & 0 - c;
    if (f_ca(c) == -1) goto B_va;
    g = c + g;
    c = a;
    goto B_ta;
    label B_wa:
    if (c != -1) goto B_ta;
    label B_va:
    15988[0]:int = 15988[0]:int | 4;
  }
  c = f_ca(b);
  a = f_ca(0);
  if (c == -1) goto B_d;
  if (a == -1) goto B_d;
  if (a <= c) goto B_d;
  g = a - c;
  if (g <= f + 40) goto B_d;
  label B_ta:
  15976[0]:int = (a = 15976[0]:int + g);
  if (15980[0]:int < a) { 15980[0]:int = a }
  e = 15568[0]:int;
  if (e) {
    a = 15992;
    loop L_ib {
      if (c == (b = a[0]:int) + (d = a[1]:int)) goto B_gb;
      a = a[2]:int;
      if (a) continue L_ib;
    }
    goto B_f;
  }
  a = 15560[0]:int;
  if (eqz(select_if(a, 0, a <= c))) { 15560[0]:int = c }
  a = 0;
  15996[0]:int = g;
  15992[0]:int = c;
  15576[0]:int = -1;
  15580[0]:int = 16016[0]:int;
  16004[0]:int = 0;
  loop L_kb {
    b = a << 3;
    (b + 15592)[0]:int = (d = b + 15584);
    (b + 15596)[0]:int = d;
    a = a + 1;
    if (a != 32) continue L_kb;
  }
  15556[0]:int = (d = (a = g - 40) - (b = -8 - c & 7));
  15568[0]:int = (b = b + c);
  b[1]:int = d | 1;
  (a + c)[1]:int = 40;
  15572[0]:int = 16032[0]:int;
  goto B_e;
  label B_gb:
  if (c <= e) goto B_f;
  if (b > e) goto B_f;
  if (a[3]:int & 8) goto B_f;
  a[1]:int = d + g;
  15568[0]:int = (b = e + (a = -8 - e & 7));
  15556[0]:int = (a = (c = 15556[0]:int + g) - a);
  b[1]:int = a | 1;
  (c + e)[1]:int = 40;
  15572[0]:int = 16032[0]:int;
  goto B_e;
  label B_h:
  d = 0;
  goto B_b;
  label B_g:
  c = 0;
  goto B_c;
  label B_f:
  if (15560[0]:int > c) { 15560[0]:int = c }
  b = c + g;
  a = 15992;
  loop L_pb {
    if (b != a[0]:int) {
      a = a[2]:int;
      if (a) continue L_pb;
      goto B_ob;
    }
  }
  if (eqz(a[12]:ubyte & 8)) goto B_nb;
  label B_ob:
  a = 15992;
  loop L_rb {
    if (e >= (b = a[0]:int)) {
      d = b + a[1]:int;
      if (d > e) goto B_sb;
    }
    a = a[2]:int;
    continue L_rb;
    label B_sb:
  }
  15556[0]:int = (i = (a = g - 40) - (b = -8 - c & 7));
  15568[0]:int = (b = b + c);
  b[1]:int = i | 1;
  (a + c)[1]:int = 40;
  15572[0]:int = 16032[0]:int;
  b = select_if(e, a = d + (39 - d & 7) - 47, a < e + 16);
  b[1]:int = 27;
  b[4]:long@4 = 16000[0]:long@4;
  b[2]:long@4 = 15992[0]:long@4;
  16000[0]:int = b + 8;
  15996[0]:int = g;
  15992[0]:int = c;
  16004[0]:int = 0;
  a = b + 24;
  loop L_ub {
    a[1]:int = 7;
    let t0 = a + 8;
    a = a + 4;
    if (t0 < d) continue L_ub;
  }
  if (b == e) goto B_e;
  b[1]:int = b[1]:int & -2;
  e[1]:int = (c = b - e) | 1;
  b[0]:int = c;
  if (c <= 255) {
    a = (c & -8) + 15584;
    b = {
          b = 15544[0]:int;
          if (eqz(b & (c = 1 << (c >> 3)))) {
            15544[0]:int = b | c;
            a;
            goto B_wb;
          }
          a[2]:int;
          label B_wb:
        }
    a[2]:int = e;
    b[3]:int = e;
    e[3]:int = a;
    e[2]:int = b;
    goto B_e;
  }
  a = 31;
  if (c <= 16777215) { a = (c >> 38 - (a = clz(c >> 8)) & 1) - (a << 1) + 62 }
  e[7]:int = a;
  e[4]:long@4 = 0L;
  b = (a << 2) + 15848;
  d = 15548[0]:int;
  if (eqz(d & (g = 1 << a))) {
    15548[0]:int = d | g;
    b[0]:int = e;
    goto B_zb;
  }
  a = c << select_if(25 - (a >> 1), 0, a != 31);
  d = b[0]:int;
  loop L_bc {
    b = d;
    if ((b[1]:int & -8) == c) goto B_mb;
    d = a >> 29;
    a = a << 1;
    g = b + (d & 4);
    d = g[4];
    if (d) continue L_bc;
  }
  g[4] = e;
  label B_zb:
  e[6]:int = b;
  e[3]:int = e;
  e[2]:int = e;
  goto B_e;
  label B_nb:
  a[0]:int = c;
  a[1]:int = a[1]:int + g;
  h = c + (-8 - c & 7);
  h[1] = f | 3;
  e = b + (-8 - b & 7);
  g = e - (f = f + h);
  if (15568[0]:int == e) {
    15568[0]:int = f;
    15556[0]:int = (a = 15556[0]:int + g);
    f[1]:int = a | 1;
    goto B_cc;
  }
  if (15564[0]:int == e) {
    15564[0]:int = f;
    15552[0]:int = (a = 15552[0]:int + g);
    f[1]:int = a | 1;
    (a + f)[0]:int = a;
    goto B_cc;
  }
  c = e[1]:int;
  if ((c & 3) == 1) {
    j = c & -8;
    if (c <= 255) {
      a = e[3]:int;
      if (a == (b = e[2]:int)) {
        15544[0]:int = 15544[0]:int & -2 << (c >> 3);
        goto B_gc;
      }
      b[3]:int = a;
      a[2]:int = b;
      goto B_gc;
    }
    i = e[6]:int;
    if (e != (a = e[3]:int)) {
      15560[0]:int;
      b = e[2]:int;
      b[3]:int = a;
      a[2]:int = b;
      goto B_jc;
    }
    b = e + 20;
    c = b[0]:int;
    if (eqz(c)) {
      c = e[4]:int;
      if (eqz(c)) goto B_lc;
      b = e + 16;
    }
    loop L_nc {
      d = b;
      a = c;
      b = a + 20;
      c = b[0]:int;
      if (c) continue L_nc;
      b = a + 16;
      c = a[4]:int;
      if (c) continue L_nc;
    }
    d.a = 0;
    goto B_jc;
    label B_lc:
    a = 0;
    label B_jc:
    if (eqz(i)) goto B_gc;
    b = e[7]:int;
    c = (b << 2) + 15848;
    if (c[0]:int == e) {
      c[0]:int = a;
      if (a) goto B_oc;
      15548[0]:int = 15548[0]:int & -2 << b;
      goto B_gc;
    }
    (i + select_if(16, 20, i[4] == e))[0]:int = a;
    if (eqz(a)) goto B_gc;
    label B_oc:
    a[6]:int = i;
    b = e[4]:int;
    if (b) {
      a[4]:int = b;
      b[6]:int = a;
    }
    b = e[5]:int;
    if (eqz(b)) goto B_gc;
    a[5]:int = b;
    b[6]:int = a;
    label B_gc:
    g = g + j;
    e = e + j;
    c = e[1]:int;
  }
  e[1]:int = c & -2;
  f[1]:int = g | 1;
  (f + g)[0]:int = g;
  if (g <= 255) {
    a = (g & -8) + 15584;
    b = {
          b = 15544[0]:int;
          if (eqz(b & (c = 1 << (g >> 3)))) {
            15544[0]:int = b | c;
            a;
            goto B_sc;
          }
          a[2]:int;
          label B_sc:
        }
    a[2]:int = f;
    b[3]:int = f;
    f[3]:int = a;
    f[2]:int = b;
    goto B_cc;
  }
  c = 31;
  if (g <= 16777215) { c = (g >> 38 - (a = clz(g >> 8)) & 1) - (a << 1) + 62 }
  f[7]:int = c;
  f[4]:long@4 = 0L;
  b = (c << 2) + 15848;
  a = 15548[0]:int;
  if (eqz(a & (d = 1 << c))) {
    15548[0]:int = a | d;
    b[0]:int = f;
    goto B_wc;
  }
  c = g << select_if(25 - (c >> 1), 0, c != 31);
  a = b[0]:int;
  loop L_yc {
    b = a;
    if ((b[1]:int & -8) == g) goto B_vc;
    a = c >> 29;
    c = c << 1;
    d = b + (a & 4);
    a = d.e;
    if (a) continue L_yc;
  }
  d.e = f;
  label B_wc:
  f[6]:int = b;
  f[3]:int = f;
  f[2]:int = f;
  goto B_cc;
  label B_vc:
  a = b[2]:int;
  a[3]:int = f;
  b[2]:int = f;
  f[6]:int = 0;
  f[3]:int = b;
  f[2]:int = a;
  label B_cc:
  a = h + 8;
  goto B_a;
  label B_mb:
  a = b[2]:int;
  a[3]:int = e;
  b[2]:int = e;
  e[6]:int = 0;
  e[3]:int = b;
  e[2]:int = a;
  label B_e:
  a = 15556[0]:int;
  if (a <= f) goto B_d;
  15556[0]:int = (b = a - f);
  15568[0]:int = (c = (a = 15568[0]:int) + f);
  c[1]:int = b | 1;
  a[1]:int = f | 3;
  a = a + 8;
  goto B_a;
  label B_d:
  14480[0]:int = 48;
  a = 0;
  goto B_a;
  label B_c:
  if (eqz(h)) goto B_zc;
  a = d.h;
  b = (a << 2) + 15848;
  if (b[0]:int == d) {
    b[0]:int = c;
    if (c) goto B_ad;
    15548[0]:int = (i = i & -2 << a);
    goto B_zc;
  }
  (h + select_if(16, 20, h[4] == d))[0]:int = c;
  if (eqz(c)) goto B_zc;
  label B_ad:
  c[6]:int = h;
  a = d.e;
  if (a) {
    c[4]:int = a;
    a[6]:int = c;
  }
  a = d.f;
  if (eqz(a)) goto B_zc;
  c[5]:int = a;
  a[6]:int = c;
  label B_zc:
  if (e <= 15) {
    d.b = (a = e + f) | 3;
    a = a + d;
    a[1]:int = a[1]:int | 1;
    goto B_dd;
  }
  d.b = f | 3;
  c = d + f;
  c[1]:int = e | 1;
  (c + e)[0]:int = e;
  if (e <= 255) {
    a = (e & -8) + 15584;
    b = {
          b = 15544[0]:int;
          if (eqz(b & (f = 1 << (e >> 3)))) {
            15544[0]:int = b | f;
            a;
            goto B_gd;
          }
          a[2]:int;
          label B_gd:
        }
    a[2]:int = c;
    b[3]:int = c;
    c[3]:int = a;
    c[2]:int = b;
    goto B_dd;
  }
  a = 31;
  if (e <= 16777215) { a = (e >> 38 - (a = clz(e >> 8)) & 1) - (a << 1) + 62 }
  c[7]:int = a;
  c[4]:long@4 = 0L;
  b = (a << 2) + 15848;
  if (eqz(i & (f = 1 << a))) {
    15548[0]:int = f | i;
    b[0]:int = c;
    goto B_kd;
  }
  a = e << select_if(25 - (a >> 1), 0, a != 31);
  f = b[0]:int;
  loop L_md {
    b = f;
    if ((b[1]:int & -8) == e) goto B_jd;
    f = a >> 29;
    a = a << 1;
    g = b + (f & 4);
    f = g[4];
    if (f) continue L_md;
  }
  g[4] = c;
  label B_kd:
  c[6]:int = b;
  c[3]:int = c;
  c[2]:int = c;
  goto B_dd;
  label B_jd:
  a = b[2]:int;
  a[3]:int = c;
  b[2]:int = c;
  c[6]:int = 0;
  c[3]:int = b;
  c[2]:int = a;
  label B_dd:
  a = d + 8;
  goto B_a;
  label B_b:
  if (eqz(j)) goto B_nd;
  a = c[7]:int;
  b = (a << 2) + 15848;
  if (b[0]:int == c) {
    b[0]:int = d;
    if (d) goto B_od;
    15548[0]:int = l & -2 << a;
    goto B_nd;
  }
  (j + select_if(16, 20, j[4] == c))[0]:int = d;
  if (eqz(d)) goto B_nd;
  label B_od:
  d.g = j;
  a = c[4]:int;
  if (a) {
    d.e = a;
    a[6]:int = d;
  }
  a = c[5]:int;
  if (eqz(a)) goto B_nd;
  d.f = a;
  a[6]:int = d;
  label B_nd:
  if (e <= 15) {
    c[1]:int = (a = e + f) | 3;
    a = a + c;
    a[1]:int = a[1]:int | 1;
    goto B_rd;
  }
  c[1]:int = f | 3;
  d = c + f;
  d.b = e | 1;
  (d + e)[0]:int = e;
  if (h) {
    a = (h & -8) + 15584;
    b = 15564[0]:int;
    f = {
          f = 1 << (h >> 3);
          if (eqz(f & g)) {
            15544[0]:int = f | g;
            a;
            goto B_ud;
          }
          a[2]:int;
          label B_ud:
        }
    a[2]:int = b;
    f[3]:int = b;
    b[3]:int = a;
    b[2]:int = f;
  }
  15564[0]:int = d;
  15552[0]:int = e;
  label B_rd:
  a = c + 8;
  label B_a:
  g_a = k + 16;
  return a;
}

function f_ea(a:int_ptr) {
  var b:int_ptr;
  var d:int_ptr;
  var e:{ a:int, b:int, c:int }
  var h:int_ptr;
  var g:int_ptr;
  if (eqz(a)) goto B_a;
  var c:int = a - 8;
  var f:{ a:int, b:int, c:int, d:int, e:int, f:int, g:int, h:int } = 
    c + (a = (b = (a - 4)[0]:int) & -8);
  if (b & 1) goto B_b;
  if (eqz(b & 2)) goto B_a;
  c = c - (b = c[0]:int);
  if (c < 15560[0]:int) goto B_a;
  a = a + b;
  if (15564[0]:int != c) {
    if (b <= 255) {
      e = b >> 3;
      b = c[3]:int;
      if (b == (d = c[2]:int)) {
        15544[0]:int = 15544[0]:int & -2 << e;
        goto B_b;
      }
      d[3] = b;
      b[2] = d;
      goto B_b;
    }
    g = c[6]:int;
    if (c != (b = c[3]:int)) {
      d = c[2]:int;
      d[3] = b;
      b[2] = d;
      goto B_c;
    }
    e = c + 20;
    d = e.a;
    if (eqz(d)) {
      d = c[4]:int;
      if (eqz(d)) goto B_d;
      e = c + 16;
    }
    loop L_j {
      h = e;
      b = d;
      e = b + 20;
      d = e.a;
      if (d) continue L_j;
      e = b + 16;
      d = b[4];
      if (d) continue L_j;
    }
    h[0] = 0;
    goto B_c;
  }
  b = f.b;
  if ((b & 3) != 3) goto B_b;
  15552[0]:int = a;
  f.b = b & -2;
  c[1]:int = a | 1;
  f.a = a;
  return ;
  label B_d:
  b = 0;
  label B_c:
  if (eqz(g)) goto B_b;
  d = c[7]:int;
  e = (d << 2) + 15848;
  if (e.a == c) {
    e.a = b;
    if (b) goto B_k;
    15548[0]:int = 15548[0]:int & -2 << d;
    goto B_b;
  }
  (g + select_if(16, 20, g[4] == c))[0]:int = b;
  if (eqz(b)) goto B_b;
  label B_k:
  b[6] = g;
  d = c[4]:int;
  if (d) {
    b[4] = d;
    d[6] = b;
  }
  d = c[5]:int;
  if (eqz(d)) goto B_b;
  b[5] = d;
  d[6] = b;
  label B_b:
  if (c >= f) goto B_a;
  b = f.b;
  if (eqz(b & 1)) goto B_a;
  if (eqz(b & 2)) {
    if (15568[0]:int == f) {
      15568[0]:int = c;
      15556[0]:int = (a = 15556[0]:int + a);
      c[1]:int = a | 1;
      if (c != 15564[0]:int) goto B_a;
      15552[0]:int = 0;
      15564[0]:int = 0;
      return ;
    }
    if (15564[0]:int == f) {
      15564[0]:int = c;
      15552[0]:int = (a = 15552[0]:int + a);
      c[1]:int = a | 1;
      (a + c)[0]:int = a;
      return ;
    }
    a = (b & -8) + a;
    if (b <= 255) {
      e = b >> 3;
      b = f.d;
      if (b == (d = f.c)) {
        15544[0]:int = 15544[0]:int & -2 << e;
        goto B_o;
      }
      d[3] = b;
      b[2] = d;
      goto B_o;
    }
    g = f.g;
    if (f != (b = f.d)) {
      15560[0]:int;
      d = f.c;
      d[3] = b;
      b[2] = d;
      goto B_p;
    }
    e = f + 20;
    d = e.a;
    if (eqz(d)) {
      d = f.e;
      if (eqz(d)) goto B_q;
      e = f + 16;
    }
    loop L_y {
      h = e;
      b = d;
      e = b + 20;
      d = e.a;
      if (d) continue L_y;
      e = b + 16;
      d = b[4];
      if (d) continue L_y;
    }
    h[0] = 0;
    goto B_p;
  }
  f.b = b & -2;
  c[1]:int = a | 1;
  (a + c)[0]:int = a;
  goto B_n;
  label B_q:
  b = 0;
  label B_p:
  if (eqz(g)) goto B_o;
  d = f.h;
  e = (d << 2) + 15848;
  if (e.a == f) {
    e.a = b;
    if (b) goto B_z;
    15548[0]:int = 15548[0]:int & -2 << d;
    goto B_o;
  }
  (g + select_if(16, 20, g[4] == f))[0]:int = b;
  if (eqz(b)) goto B_o;
  label B_z:
  b[6] = g;
  d = f.e;
  if (d) {
    b[4] = d;
    d[6] = b;
  }
  d = f.f;
  if (eqz(d)) goto B_o;
  b[5] = d;
  d[6] = b;
  label B_o:
  c[1]:int = a | 1;
  (a + c)[0]:int = a;
  if (c != 15564[0]:int) goto B_n;
  15552[0]:int = a;
  return ;
  label B_n:
  if (a <= 255) {
    b = (a & -8) + 15584;
    a = {
          d = 15544[0]:int;
          if (eqz(d & (a = 1 << (a >> 3)))) {
            15544[0]:int = a | d;
            b;
            goto B_da;
          }
          b[2];
          label B_da:
        }
    b[2] = c;
    a[3] = c;
    c[3]:int = b;
    c[2]:int = a;
    return ;
  }
  d = 31;
  if (a <= 16777215) { d = (a >> 38 - (b = clz(a >> 8)) & 1) - (b << 1) + 62 }
  c[7]:int = d;
  c[4]:long@4 = 0L;
  b = (d << 2) + 15848;
  e = 15548[0]:int;
  if (eqz(e & (h = 1 << d))) {
    15548[0]:int = e | h;
    b[0] = c;
    c[6]:int = b;
    goto B_ia;
  }
  d = a << select_if(25 - (d >> 1), 0, d != 31);
  b = b[0];
  loop L_ka {
    e = b;
    if ((e.b & -8) == a) goto B_ha;
    b = d >> 29;
    d = d << 1;
    h = e + (b & 4);
    b = (h + 16)[0]:int;
    if (b) continue L_ka;
  }
  h[4] = c;
  c[6]:int = e;
  label B_ia:
  c[3]:int = c;
  c[2]:int = c;
  goto B_ga;
  label B_ha:
  a = e.c;
  a[3] = c;
  e.c = c;
  c[6]:int = 0;
  c[3]:int = e;
  c[2]:int = a;
  label B_ga:
  15576[0]:int = select_if(a = 15576[0]:int - 1, -1, a);
  label B_a:
}

export function emscripten_builtin_memalign(a:{ a:int, b:int }, b:{ a:int, b:int }):int {
  var d:int;
  if (a <= 8) { return malloc(b) }
  return 
    {
      var c:int_ptr = 16;
      d = select_if(16, a, a <= 16);
      if (eqz(d & d - 1)) {
        a = d;
        goto B_c;
      }
      loop L_e {
        a = c;
        c = a << 1;
        if (a < d) continue L_e;
      }
      label B_c:
      if (b >= -64 - a) {
        14480[0]:int = 48;
        0;
        goto B_b;
      }
      0;
      if (
        eqz(c = malloc((d = select_if(16, b + 11 & -8, b < 11)) + a + 12))) goto B_b;
      b = c - 8;
      if (eqz(a - 1 & c)) {
        a = b;
        goto B_g;
      }
      var f:int_ptr = c - 4;
      var g:int = f[0];
      var e:int_ptr = 
        (g & -8) -
        (c = 
           (a = (c = (a + c - 1 & 0 - a) - 8) + select_if(a, 0, c - b <= 15)) -
           b);
      if (eqz(g & 3)) {
        b = b.a;
        a.b = e;
        a.a = b + c;
        goto B_g;
      }
      a.b = (e | (a.b & 1)) | 2;
      e = a + e;
      e[1] = e[1] | 1;
      f[0] = (c | (f[0] & 1)) | 2;
      e = b + c;
      e[1] = e[1] | 1;
      f_ga(b, c);
      label B_g:
      b = a.b;
      if (eqz(b & 3)) goto B_j;
      c = b & -8;
      if (c <= d + 16) goto B_j;
      a.b = (d | (b & 1)) | 2;
      b = a + d;
      b.b = (d = c - d) | 3;
      c = a + c;
      c[1] = c[1] | 1;
      f_ga(b, d);
      label B_j:
      a + 8;
      label B_b:
    }
}

function f_ga(a:int, b:int_ptr) {
  var d:int_ptr;
  var e:{ a:int, b:int, c:int }
  var h:int_ptr;
  var g:int_ptr;
  var c:int_ptr;
  var f:{ a:int, b:int, c:int, d:int, e:int, f:int, g:int, h:int } = 
    a + b;
  c = a[1]:int;
  if (c & 1) goto B_b;
  if (eqz(c & 2)) goto B_a;
  c = a[0]:int;
  b = c + b;
  a = a - c;
  if (a != 15564[0]:int) {
    if (c <= 255) {
      e = c >> 3;
      d = a[2]:int;
      if (d != (c = a[3]:int)) goto B_e;
      15544[0]:int = 15544[0]:int & -2 << e;
      goto B_b;
    }
    g = a[6]:int;
    if (a != (c = a[3]:int)) {
      15560[0]:int;
      d = a[2]:int;
      d[3] = c;
      c[2] = d;
      goto B_c;
    }
    e = a + 20;
    d = e.a;
    if (eqz(d)) {
      d = a[4]:int;
      if (eqz(d)) goto B_d;
      e = a + 16;
    }
    loop L_j {
      h = e;
      c = d;
      e = c + 20;
      d = e.a;
      if (d) continue L_j;
      e = c + 16;
      d = c[4];
      if (d) continue L_j;
    }
    h[0] = 0;
    goto B_c;
  }
  c = f.b;
  if ((c & 3) != 3) goto B_b;
  15552[0]:int = b;
  f.b = c & -2;
  a[1]:int = b | 1;
  f.a = b;
  return ;
  label B_e:
  d[3] = c;
  c[2] = d;
  goto B_b;
  label B_d:
  c = 0;
  label B_c:
  if (eqz(g)) goto B_b;
  d = a[7]:int;
  e = (d << 2) + 15848;
  if (e.a == a) {
    e.a = c;
    if (c) goto B_k;
    15548[0]:int = 15548[0]:int & -2 << d;
    goto B_b;
  }
  (g + select_if(16, 20, g[4] == a))[0]:int = c;
  if (eqz(c)) goto B_b;
  label B_k:
  c[6] = g;
  d = a[4]:int;
  if (d) {
    c[4] = d;
    d[6] = c;
  }
  d = a[5]:int;
  if (eqz(d)) goto B_b;
  c[5] = d;
  d[6] = c;
  label B_b:
  c = f.b;
  if (eqz(c & 2)) {
    if (15568[0]:int == f) {
      15568[0]:int = a;
      15556[0]:int = (b = 15556[0]:int + b);
      a[1]:int = b | 1;
      if (a != 15564[0]:int) goto B_a;
      15552[0]:int = 0;
      15564[0]:int = 0;
      return ;
    }
    if (15564[0]:int == f) {
      15564[0]:int = a;
      15552[0]:int = (b = 15552[0]:int + b);
      a[1]:int = b | 1;
      (a + b)[0]:int = b;
      return ;
    }
    b = (c & -8) + b;
    if (c <= 255) {
      e = c >> 3;
      c = f.d;
      if (c == (d = f.c)) {
        15544[0]:int = 15544[0]:int & -2 << e;
        goto B_o;
      }
      d[3] = c;
      c[2] = d;
      goto B_o;
    }
    g = f.g;
    if (f != (c = f.d)) {
      15560[0]:int;
      d = f.c;
      d[3] = c;
      c[2] = d;
      goto B_p;
    }
    e = f + 20;
    d = e.a;
    if (eqz(d)) {
      d = f.e;
      if (eqz(d)) goto B_q;
      e = f + 16;
    }
    loop L_y {
      h = e;
      c = d;
      e = c + 20;
      d = e.a;
      if (d) continue L_y;
      e = c + 16;
      d = c[4];
      if (d) continue L_y;
    }
    h[0] = 0;
    goto B_p;
  }
  f.b = c & -2;
  a[1]:int = b | 1;
  (a + b)[0]:int = b;
  goto B_n;
  label B_q:
  c = 0;
  label B_p:
  if (eqz(g)) goto B_o;
  d = f.h;
  e = (d << 2) + 15848;
  if (e.a == f) {
    e.a = c;
    if (c) goto B_z;
    15548[0]:int = 15548[0]:int & -2 << d;
    goto B_o;
  }
  (g + select_if(16, 20, g[4] == f))[0]:int = c;
  if (eqz(c)) goto B_o;
  label B_z:
  c[6] = g;
  d = f.e;
  if (d) {
    c[4] = d;
    d[6] = c;
  }
  d = f.f;
  if (eqz(d)) goto B_o;
  c[5] = d;
  d[6] = c;
  label B_o:
  a[1]:int = b | 1;
  (a + b)[0]:int = b;
  if (a != 15564[0]:int) goto B_n;
  15552[0]:int = b;
  return ;
  label B_n:
  if (b <= 255) {
    c = (b & -8) + 15584;
    b = {
          d = 15544[0]:int;
          if (eqz(d & (b = 1 << (b >> 3)))) {
            15544[0]:int = b | d;
            c;
            goto B_da;
          }
          c[2];
          label B_da:
        }
    c[2] = a;
    b[3] = a;
    a[3]:int = c;
    a[2]:int = b;
    return ;
  }
  d = 31;
  if (b <= 16777215) { d = (b >> 38 - (c = clz(b >> 8)) & 1) - (c << 1) + 62 }
  a[7]:int = d;
  a[4]:long@4 = 0L;
  c = (d << 2) + 15848;
  e = 15548[0]:int;
  if (eqz(e & (h = 1 << d))) {
    15548[0]:int = e | h;
    c[0] = a;
    a[6]:int = c;
    goto B_ha;
  }
  d = b << select_if(25 - (d >> 1), 0, d != 31);
  c = c[0];
  loop L_ja {
    e = c;
    if ((e.b & -8) == b) goto B_ga;
    c = d >> 29;
    d = d << 1;
    h = e + (c & 4);
    c = (h + 16)[0]:int;
    if (c) continue L_ja;
  }
  h[4] = a;
  a[6]:int = e;
  label B_ha:
  a[3]:int = a;
  a[2]:int = a;
  return ;
  label B_ga:
  b = e.c;
  b[3] = a;
  e.c = a;
  a[6]:int = 0;
  a[3]:int = e;
  a[2]:int = b;
  label B_a:
}

export function setTempRet0(a:int) {
  g_b = a
}

export function emscripten_stack_get_free():int {
  return g_a - g_c
}

export function emscripten_stack_get_base():int {
  return g_d
}

export function emscripten_stack_get_end():int {
  return g_c
}

export function stackSave():int {
  return g_a
}

export function stackRestore(a:int) {
  g_a = a
}

export function stackAlloc(a:int):int {
  a = g_a - a & -16;
  g_a = a;
  return a;
}

export function htonl(a:int):int {
  return (a << 24 | (a & 65280) << 8) | ((a >> 8 & 65280) | a >> 24)
}

export function dynCall_jiji(a:int, b:int, c:int, d:int, e:int):int {
  var f:long = 
    call_indirect(b, i64_extend_i32_u(c) | i64_extend_i32_u(d) << 32L, e, a);
  g_b = i32_wrap_i64(f >> 32L);
  return i32_wrap_i64(f);
}

